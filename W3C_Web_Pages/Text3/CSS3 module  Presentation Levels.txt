CSS3 module: Presentation Levels CSS3 module: Presentation Levels W3C Working Draft August version: http://www.w3.org/TR/2003/WD-css3-preslev-20030813 Latest version: http://www.w3.org/TR/css3-preslev Editors: Ian Hickson<ian @hixie.ch> Håkon Wium Lie<howcome @opera.com> Copyright© W3C® ERCIM, Keio),All Rights Reserved. W3C liability,trademark,documentuse softwarelicensing rules apply. Abstract Presentation levels are integer values attached elements document.Elements are certain threshold be styleddifferently. feature compelling use cases. First, slidepresentations transition effects be described. example, listitems be progressively revealed sliding side. Second,outline views documents, only headings certain level arevisible, be generated. Status Document section status document time itspublication. Other documents supersede document. list currentW3C publications latest revision technical report befound W3C technical reports indexat http://www.w3.org/TR/. document working draft CSS working group, partof style activity summary). working group draft useful functionality forpresenting web documents. Comments discussions draft besent publicmailing list www-style@w3.org instructions). W3C Members alsosend comments directly CSS working group. inappropriate use W3C Working Drafts reference material tocite other progress". publication not implyendorsement W3C membership CSS Working Group only). Patent disclosures relevant CSS be found Working Group'spublic patent disclosurepage. Table contents model property Example revealing list items Example presentingoutline views document Presentation levels model Content reuse been main motivations development ofstyle sheets. associating documents different style sheets, samecontent be presented different ways. introduction ofpresentation levels CSS functionality very usefulin particular settings. First, slide presentations transitioneffects be described. example, list items be progressivelyrevealed sliding side. Second, outline views documents,where only headings certain level are visible, be generated. model presentation levels simple. element thedocument assigned integer value referred level" EPL be set explicitly style sheet orcalculated automatically based element's position documentstructure: specified computed value property. UserAgent integer value called User AgentPresentation Value UAPL starts UA-defined value, typically0. elements are presentation pseudo-classes: pseudo-classes refer whetherthe element's EPL was UAPL last time UAPLchanged. element's state evaluated, EPL compared pseudo-classes are assigned EPL equal element always below-level state. EPL lower value, set state, EPL exactly thatvalue set EPL greater value itis set Here example style sheets using presentationpseudo-classes: color: black color: red color: silver proposal not describe user interface presentation levels.The user agent need provide user interface setting UAPL.For example, projection mode, user agent increase UAPL everytime user hits space bar. user moves page following hyperlink), user agent set UAPL be presentation level first element page. outline mode,the user agent provide vertical slider side increase/decreasethe UAPL. property Name: presentation-level Value: <integer> same increment Initial: Applies elements Inherited: yes Percentages: N/A Media: Computed value: integer property sets element's presentation level values havethe following meanings: integer value sets presentation level explicitly. value computes value onemore previous document order) element's presentation level. value computes same value previous element's document order) presentation level. rootelement, computes Example progressivelyrevealing list items Here example presentation levels be used progressivelyreveal list items high-lighting current EPL value<!DOCTYPE HTML PUBLIC HTML html color: black; background: white @media projection h1 page-break-before: always li presentation-level: increment color: black color: red color: silver strategy</H2> <LI>divide <LI>conquer <P>(in order) strategy</H2> <LI>obfuscate <LI>propagate example above, LI elements' EPL value increased onecompared previous element. other elements' EPL value sameas previous element due initial property. Example presenting outlineviews document Here example presentation levels be used presentoutline views document: EPL value<!DOCTYPE HTML PUBLIC HTML h1 presentation-level: h2 presentation-level: h3 presentation-level: body presentation-level: display: none; strategy</H2> order) strategy</H2> Presentation levels DOM element's state first evaluated created. UAPL ischanged, elements document have state reevaluated. ACSSNowBelowLevel event then sent elements changed state, CSSNowAtLevel event then sent elements thatchanged state, CSSNowAboveLevel event then sent toall elements changed state. Changing element's'presentation-level' property, e.g. DOM using dynamicpseudo-class, not cause element's state be immediatelyreevaluated. events have following characteristics: Bubbles: Cancelable: Context Info: detail UAPL) SMIL be used event declaratively key animations userrequests, based property. events are defined interface CSSNowBelowLevel UIEvent interface CSSNowAtLevel UIEvent interface CSSNowAboveLevel UIEvent fragments together cause document have threeuser-triggered list items, scroll time time hits space bar mechanism UA uses), currentitem colored white items colored gray. Markup: <ol> <li> Separation Style Structure </li> <li> Declarative User Interaction </li> <li> Potential Animation </li> </ol> Stylesheet: ol overflow: hidden; li presentation-level: increment; margin-left: li:at-level color: white; li:above-level color: silver; Script: element shown, scroll right animating margin-left property document.documentElement.addEventListener('CSSNowAtLevel', handler, false); function handler(event) animateFloat library routine arguments: CSSValue animate start value end value time animate property, milliseconds units animate returns straight away animation background. animateFloat(document.getOverrideStyle(event.target, null).getPropertyCSSValue('margin-left'), CSS_PERCENTAGE); 