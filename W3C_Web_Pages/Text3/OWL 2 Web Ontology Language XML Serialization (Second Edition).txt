OWL Web Ontology Language XML Serialization Edition) OWL Web Ontology Language XML Serialization Edition) W3C Recommendation December version: http://www.w3.org/TR/2012/REC-owl2-xml-serialization-20121211/ Latest version http://www.w3.org/TR/owl2-xml-serialization/ Latest Recommendation: http://www.w3.org/TR/owl-xml-serialization Previous version: http://www.w3.org/TR/2012/PER-owl2-xml-serialization-20121018/ Editors: Boris Motik, University Oxford Bijan Parsia, University Manchester Peter F. Patel-Schneider, Nuance Communications Contributors: alphabetical order) Sean Bechhofer, University Manchester Bernardo Cuenca Grau, University Oxford Achille Fokoue, IBM Corporation Rinke Hoekstra, University Amsterdam refer errata document, include normative corrections. color-coded version document showing changes made previous version also available. document also available non-normative formats: PDF version. See also translations. Copyright W3C® ERCIM, Keio), Rights Reserved. W3C liability, trademark document use rules apply. Abstract OWL Web Ontology Language, informally OWL ontology language Semantic Web formally defined meaning. OWL ontologies provide classes, properties, individuals, data values are stored Semantic Web documents. OWL ontologies be used information written RDF, OWL ontologies are primarily exchanged RDF documents. OWL Document Overview overall state OWL be read other OWL documents. document XML serialization OWL structural specification. XML schema syntax available separate document, well being included here. Status Document May Be Superseded section status document time publication. Other documents supersede document. list current W3C publications latest revision technical report be found W3C technical reports index http://www.w3.org/TR/. Summary Changes have been substantive changes previous version. details minor changes see change log color-coded diff. Send Comments send comments public-owl-comments@w3.org archive). work document OWL Working Group complete, comments be addressed errata future revisions. Open discussion developers welcome public-owl-dev@w3.org archive). Endorsed W3C document been reviewed W3C Members, software developers, other W3C groups interested parties, endorsed Director W3C Recommendation. stable document be used reference material cited document. W3C's role making Recommendation draw attention specification promote widespread deployment. functionality interoperability Web. Patents document was produced group operating February W3C Patent Policy. W3C public list patent disclosures made connection deliverables group; page also instructions disclosing patent. Table Contents Overview Example Ontology Serialization Syntax IRIs Imports Global Conditions Profiles XML Schema OWL XML serialization ontology document Appendix: Derivation Functional Syntax Appendix: Internet Media Type, File Extension, Macintosh File Type Appendix: Change Log Changes Recommendation Changes Proposed Recommendation Changes Candidate Recommendation Changes Last Call Acknowledgments References Normative References Nonnormative References Overview document XML serialization OWL alternative exchangesyntax OWL designed use XML tools tools using, forexample, XQuery XML serialization designed anexchange syntax OWL RDF/XML only required exchange syntaxfor OWL---use XML serialization OWL tools optional. italicized keywords MUST, MUST NOT, NOT, MAY are used specify normative features OWL documents tools, are interpreted specified RFC XML serialization structural specification OWL Specification] defined means XML schema Schema] additional constraints prose. elements XML Schema belong <http://www.w3.org/2002/07/owl#> namespace, attributes belong namespace. local parts names used XML Schema are same names corresponding elements structural specification. Thus, XML serialization be seen notational variant functional syntax. notational variant functional syntax, OWL ontology serialized according specification also be serialized RDF document suitable concrete syntax such RDF/XML. suitable XSLT stylesheet, GRDDL, allow GRDDL aware software treat documents serialized OWL/XML were serialized RDF/XML. See OWL-XGX informative example works. Example Ontology following example OWL ontology written XML serialization. More examples be found OWL Primer Primer]. <?xml version="1.0" encoding="UTF-8"?><Ontology xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/07/owl# http://www.w3.org/2009/09/owl2-xml.xsd" xmlns="http://www.w3.org/2002/07/owl#" xml:base="http://example.com/myOntology" ontologyIRI="http://example.com/myOntology"> <Prefix name="myOnt" IRI="http://example.com/myOntology#"/> <Import>http://example.com/someOtherOntology</Import> <Declaration> <Class IRI="#Animal"/> </Declaration> <Declaration> <Class abbreviatedIRI="myOnt:Tabloid"/> </Declaration> <Declaration> <ObjectProperty IRI="#eats"/> </Declaration> <Declaration> <ObjectProperty IRI="#reads"/> </Declaration> <SubClassOf> <Class abbreviatedIRI="myOnt:Animal"/> <ObjectAllValuesFrom> <ObjectProperty IRI="#reads"/> <Class IRI="#Tabloid"/> </ObjectAllValuesFrom> </SubClassOf></Ontology> Serialization Syntax IRIs parsing ontology documents written XML serialization OWL values are declared schema given being type xsd:anyURI MUST be resolved respective base IRI specified XML Base specification Base]. contrast, OWL literals xsd:anyURI datatype MUST NOT be resolved base IRI: literals OWL are treated opaque values value fully defined lexical representation described Section OWL Specification]). Ontology documents written XML serialization OWL make use ofabbreviated IRIs described Section OWL Specification]. Such ontologydocuments MUST declareall prefixes used values abbreviatedIRI attributes using Prefix element document. particular file, prefix be defined only Prefix element prefix declarations are scoped tothe file lexically appear. Thus, prefix declarations are not imported. element, exactly IRI attribute abbreviatedIRI attribute MUST appear. constraint not expressed Schema technical reasons. parsing ontology documents written XML serialization OWL abbreviatedIRI attribute MUST be replaced correspondingIRI attribute. value abbreviatedIRI attribute MUST beexpanded full IRI described Section Specification]. Note: structural specification not handle relative IRIs abbreviated IRIs attendant syntax. Thus, API exactlyconforms structural syntax handle only absolute IRIs identifier OWL entities. However, implementations are free use whateverinternal representation see fit. implementation based XML DOM Object Model] sensibly choose maintain abbreviated IRI machinery solong also exposed API presented corresponding expanded IRIs. Imports Global Conditions OWL imports are not handled XML level, be handled separately. OWL ontology written XML serialization OWL MUST satisfy theconditions OWL ontologies Section OWL Specification[OWL Specification]. OWL DL ontology written XML serialization OWL MUST satisfy theconditions OWL DL ontologies Section OWL 2Specification 2Specification]. conditions involve importedontologies, thus possible OWL DL ontology written serialization OWL satisfy conditions be OWL DLontology manner invisible XML Schema checking tools not sensitive OWL imports. Profiles XML schema presented here covers entire OWL structural specification, thus features available OWL profiles Profiles]. XML Schema schema also be downloaded directly. <!DOCTYPE xsd:schema <!ENTITY PN_CHARS_BASE <!ENTITY PN_CHARS_U <!ENTITY PN_CHARS <!ENTITY PN_PREFIX <!ENTITY PN_LOCAL	 <!ENTITY PNAME_NS <!ENTITY PNAME_LN	 <!ENTITY PrefixedName http://www.w3.org/TR/rdf-sparql-query/#grammar entities implement productions PN_PREFIX roughly equivalent NCName.--><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:owl="http://www.w3.org/2002/07/owl#" targetNamespace="http://www.w3.org/2002/07/owl#" elementFormDefault="qualified" attributeFormDefault="unqualified"> <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/> <!-- ontology <xsd:complexType name="Prefix"> <xsd:attribute name="name" use="required"> <xsd:simpleType> <xsd:restriction base="xsd:string"> <xsd:pattern value="&PN_PREFIX;|"/> </xsd:restriction> </xsd:simpleType> </xsd:attribute> <xsd:attribute name="IRI" type="xsd:anyURI" use="required"/> </xsd:complexType> <xsd:element name="Prefix" type="owl:Prefix"/> <xsd:complexType name="Import"> <xsd:simpleContent> <xsd:extension base="xsd:anyURI"> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:extension> </xsd:simpleContent> </xsd:complexType> <xsd:element name="Import" type="owl:Import"/> <xsd:complexType name="Ontology"> <xsd:sequence> <xsd:element ref="owl:Prefix" minOccurs="0" maxOccurs="unbounded"/> <xsd:element ref="owl:Import" minOccurs="0" maxOccurs="unbounded"/> <xsd:group ref="owl:ontologyAnnotations"/> <xsd:group ref="owl:Axiom" minOccurs="0" maxOccurs="unbounded"/> </xsd:sequence> <xsd:attribute name="ontologyIRI" type="xsd:anyURI" use="optional"/> <xsd:attribute name="versionIRI" type="xsd:anyURI" use="optional"/> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:complexType> <xsd:element name="Ontology" type="owl:Ontology"> <xsd:unique name="prefix"> <xsd:selector xpath="owl:Prefix"/> <xsd:field xpath="@name"/> </xsd:unique> </xsd:element> <!-- Entities, anonymous individuals, literals <!-- Note group not have corresponding abstract type. due fact XML Schema not support multiple inheritence. entity class expression. authors schema determined was more useful be able retrieve such queries schema(*, owl:ClassExpression). <xsd:group name="Entity"> <xsd:choice> <xsd:element ref="owl:Class"/> <xsd:element ref="owl:Datatype"/> <xsd:element ref="owl:ObjectProperty"/> <xsd:element ref="owl:DataProperty"/> <xsd:element ref="owl:AnnotationProperty"/> <xsd:element ref="owl:NamedIndividual"/> </xsd:choice> </xsd:group> <!-- type attribute. complex type element capitalized. <xsd:simpleType name="abbreviatedIRI"> <xsd:restriction base="xsd:string"> <xsd:pattern value="&PrefixedName;"/> </xsd:restriction> </xsd:simpleType> <xsd:complexType name="Class"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:attribute name="IRI" type="xsd:anyURI" use="optional"/> <xsd:attribute name="abbreviatedIRI" type="owl:abbreviatedIRI" use="optional"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="Class" type="owl:Class"/> <xsd:complexType name="Datatype"> <xsd:complexContent> <xsd:extension base="owl:DataRange"> <xsd:attribute name="IRI" type="xsd:anyURI" use="optional"/> <xsd:attribute name="abbreviatedIRI" type="owl:abbreviatedIRI" use="optional"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="Datatype" type="owl:Datatype"/> <xsd:complexType name="ObjectProperty"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyExpression"> <xsd:attribute name="IRI" type="xsd:anyURI" use="optional"/> <xsd:attribute name="abbreviatedIRI" type="owl:abbreviatedIRI" use="optional"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectProperty" type="owl:ObjectProperty"/> <xsd:complexType name="DataProperty"> <xsd:complexContent> <xsd:extension base="owl:DataPropertyExpression"> <xsd:attribute name="IRI" type="xsd:anyURI" use="optional"/> <xsd:attribute name="abbreviatedIRI" type="owl:abbreviatedIRI" use="optional"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataProperty" type="owl:DataProperty"/> <xsd:complexType name="AnnotationProperty"> <xsd:attribute name="IRI" type="xsd:anyURI" use="optional"/> <xsd:attribute name="abbreviatedIRI" type="owl:abbreviatedIRI" use="optional"/> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:complexType> <xsd:element name="AnnotationProperty" type="owl:AnnotationProperty"/> <xsd:complexType name="Individual" abstract="true"> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:complexType> <xsd:group name="Individual"> <xsd:choice> <xsd:element ref="owl:NamedIndividual"/> <xsd:element ref="owl:AnonymousIndividual"/> </xsd:choice> </xsd:group> <xsd:complexType name="NamedIndividual"> <xsd:complexContent> <xsd:extension base="owl:Individual"> <xsd:attribute name="IRI" type="xsd:anyURI" use="optional"/> <xsd:attribute name="abbreviatedIRI" type="owl:abbreviatedIRI" use="optional"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="NamedIndividual" type="owl:NamedIndividual"/> <xsd:complexType name="AnonymousIndividual"> <xsd:complexContent> <xsd:extension base="owl:Individual"> <xsd:attribute name="nodeID" type="xsd:NCName" use="required"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="AnonymousIndividual" type="owl:AnonymousIndividual"/> <xsd:complexType name="Literal"> <xsd:simpleContent> <xsd:extension base="xsd:string"> <xsd:attribute name="datatypeIRI" type="xsd:anyURI"/> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:extension> </xsd:simpleContent> </xsd:complexType> <xsd:element name="Literal" type="owl:Literal"/> <!-- Declarations <xsd:complexType name="Declaration"> <xsd:complexContent> <xsd:extension base="owl:Axiom"> <xsd:sequence> <xsd:group ref="owl:Entity"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="Declaration" type="owl:Declaration"/> <!-- Object property expressions <xsd:complexType name="ObjectPropertyExpression" abstract="true"> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:complexType> <xsd:group name="ObjectPropertyExpression"> <xsd:choice> <xsd:element ref="owl:ObjectProperty"/> <xsd:element ref="owl:ObjectInverseOf"/> </xsd:choice> </xsd:group> <xsd:complexType name="ObjectInverseOf"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyExpression"> <xsd:sequence> <xsd:element ref="owl:ObjectProperty"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectInverseOf" type="owl:ObjectInverseOf"/> <!-- Data property expressions <xsd:complexType name="DataPropertyExpression" abstract="true"> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:complexType> <xsd:group name="DataPropertyExpression"> <xsd:sequence> <xsd:element ref="owl:DataProperty"/> </xsd:sequence> </xsd:group> <!-- Data ranges <xsd:complexType name="DataRange" abstract="true"> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:complexType> <xsd:group name="DataRange"> <xsd:choice> <xsd:element ref="owl:Datatype"/> <xsd:element ref="owl:DataIntersectionOf"/> <xsd:element ref="owl:DataUnionOf"/> <xsd:element ref="owl:DataComplementOf"/> <xsd:element ref="owl:DataOneOf"/> <xsd:element ref="owl:DatatypeRestriction"/> </xsd:choice> </xsd:group> <xsd:complexType name="DataIntersectionOf"> <xsd:complexContent> <xsd:extension base="owl:DataRange"> <xsd:sequence> <xsd:group ref="owl:DataRange" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataIntersectionOf" type="owl:DataIntersectionOf"/> <xsd:complexType name="DataUnionOf"> <xsd:complexContent> <xsd:extension base="owl:DataRange"> <xsd:sequence> <xsd:group ref="owl:DataRange" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataUnionOf" type="owl:DataUnionOf"/> <xsd:complexType name="DataComplementOf"> <xsd:complexContent> <xsd:extension base="owl:DataRange"> <xsd:sequence> <xsd:group ref="owl:DataRange"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataComplementOf" type="owl:DataComplementOf"/> <xsd:complexType name="DataOneOf"> <xsd:complexContent> <xsd:extension base="owl:DataRange"> <xsd:sequence> <xsd:element ref="owl:Literal" minOccurs="1" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataOneOf" type="owl:DataOneOf"/> <xsd:complexType name="DatatypeRestriction"> <xsd:complexContent> <xsd:extension base="owl:DataRange"> <xsd:sequence> <xsd:element ref="owl:Datatype"/> <xsd:element name="FacetRestriction" type="owl:FacetRestriction" minOccurs="1" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DatatypeRestriction" type="owl:DatatypeRestriction"/> <xsd:complexType name="FacetRestriction"> <xsd:sequence> <xsd:element ref="owl:Literal"/> </xsd:sequence> <xsd:attribute name="facet" type="xsd:anyURI" use="required"/> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:complexType> <!-- Class expressions <xsd:complexType name="ClassExpression" abstract="true"> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:complexType> <xsd:group name="ClassExpression"> <xsd:choice> <xsd:element ref="owl:Class"/> <xsd:element ref="owl:ObjectIntersectionOf"/> <xsd:element ref="owl:ObjectUnionOf"/> <xsd:element ref="owl:ObjectComplementOf"/> <xsd:element ref="owl:ObjectOneOf"/> <xsd:element ref="owl:ObjectSomeValuesFrom"/> <xsd:element ref="owl:ObjectAllValuesFrom"/> <xsd:element ref="owl:ObjectHasValue"/> <xsd:element ref="owl:ObjectHasSelf"/> <xsd:element ref="owl:ObjectMinCardinality"/> <xsd:element ref="owl:ObjectMaxCardinality"/> <xsd:element ref="owl:ObjectExactCardinality"/> <xsd:element ref="owl:DataSomeValuesFrom"/> <xsd:element ref="owl:DataAllValuesFrom"/> <xsd:element ref="owl:DataHasValue"/> <xsd:element ref="owl:DataMinCardinality"/> <xsd:element ref="owl:DataMaxCardinality"/> <xsd:element ref="owl:DataExactCardinality"/> </xsd:choice> </xsd:group> <xsd:complexType name="ObjectIntersectionOf"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:ClassExpression" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectIntersectionOf" type="owl:ObjectIntersectionOf"/> <xsd:complexType name="ObjectUnionOf"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:ClassExpression" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectUnionOf" type="owl:ObjectUnionOf"/> <xsd:complexType name="ObjectComplementOf"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:ClassExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectComplementOf" type="owl:ObjectComplementOf"/> <xsd:complexType name="ObjectOneOf"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:Individual" minOccurs="1" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectOneOf" type="owl:ObjectOneOf"/> <xsd:complexType name="ObjectSomeValuesFrom"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> <xsd:group ref="owl:ClassExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectSomeValuesFrom" type="owl:ObjectSomeValuesFrom"/> <xsd:complexType name="ObjectAllValuesFrom"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> <xsd:group ref="owl:ClassExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectAllValuesFrom" type="owl:ObjectAllValuesFrom"/> <xsd:complexType name="ObjectHasValue"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> <xsd:group ref="owl:Individual"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectHasValue" type="owl:ObjectHasValue"/> <xsd:complexType name="ObjectHasSelf"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectHasSelf" type="owl:ObjectHasSelf"/> <xsd:complexType name="ObjectMinCardinality"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> <xsd:group ref="owl:ClassExpression" minOccurs="0" maxOccurs="1"/> </xsd:sequence> <xsd:attribute name="cardinality" type="xsd:nonNegativeInteger" use="required"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectMinCardinality" type="owl:ObjectMinCardinality"/> <xsd:complexType name="ObjectMaxCardinality"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> <xsd:group ref="owl:ClassExpression" minOccurs="0" maxOccurs="1"/> </xsd:sequence> <xsd:attribute name="cardinality" type="xsd:nonNegativeInteger" use="required"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectMaxCardinality" type="owl:ObjectMaxCardinality"/> <xsd:complexType name="ObjectExactCardinality"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> <xsd:group ref="owl:ClassExpression" minOccurs="0" maxOccurs="1"/> </xsd:sequence> <xsd:attribute name="cardinality" type="xsd:nonNegativeInteger" use="required"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectExactCardinality" type="owl:ObjectExactCardinality"/> <xsd:complexType name="DataSomeValuesFrom"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression" minOccurs="1" maxOccurs="unbounded"/> <xsd:group ref="owl:DataRange"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataSomeValuesFrom" type="owl:DataSomeValuesFrom"/> <xsd:complexType name="DataAllValuesFrom"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression" minOccurs="1" maxOccurs="unbounded"/> <xsd:group ref="owl:DataRange"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataAllValuesFrom" type="owl:DataAllValuesFrom"/> <xsd:complexType name="DataHasValue"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression"/> <xsd:element ref="owl:Literal"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataHasValue" type="owl:DataHasValue"/> <xsd:complexType name="DataMinCardinality"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression"/> <xsd:group ref="owl:DataRange" minOccurs="0" maxOccurs="1"/> </xsd:sequence> <xsd:attribute name="cardinality" type="xsd:nonNegativeInteger" use="required"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataMinCardinality" type="owl:DataMinCardinality"/> <xsd:complexType name="DataMaxCardinality"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression"/> <xsd:group ref="owl:DataRange" minOccurs="0" maxOccurs="1"/> </xsd:sequence> <xsd:attribute name="cardinality" type="xsd:nonNegativeInteger" use="required"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataMaxCardinality" type="owl:DataMaxCardinality"/> <xsd:complexType name="DataExactCardinality"> <xsd:complexContent> <xsd:extension base="owl:ClassExpression"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression"/> <xsd:group ref="owl:DataRange" minOccurs="0" maxOccurs="1"/> </xsd:sequence> <xsd:attribute name="cardinality" type="xsd:nonNegativeInteger" use="required"/> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataExactCardinality" type="owl:DataExactCardinality"/> <!-- Axioms <xsd:complexType name="Axiom" abstract="true"> <xsd:sequence> <xsd:group ref="owl:axiomAnnotations"/> </xsd:sequence> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:complexType> <xsd:group name="Axiom"> <xsd:choice> <xsd:element ref="owl:Declaration"/> <xsd:group ref="owl:ClassAxiom"/> <xsd:group ref="owl:ObjectPropertyAxiom"/> <xsd:group ref="owl:DataPropertyAxiom"/> <xsd:element ref="owl:DatatypeDefinition"/> <xsd:element ref="owl:HasKey"/> <xsd:group ref="owl:Assertion"/> <xsd:group ref="owl:AnnotationAxiom"/> </xsd:choice> </xsd:group> <!-- Class expression axioms <xsd:complexType name="ClassAxiom" abstract="true"> <xsd:complexContent> <xsd:extension base="owl:Axiom"/> </xsd:complexContent> </xsd:complexType> <xsd:group name="ClassAxiom"> <xsd:choice> <xsd:element ref="owl:SubClassOf"/> <xsd:element ref="owl:EquivalentClasses"/> <xsd:element ref="owl:DisjointClasses"/> <xsd:element ref="owl:DisjointUnion"/> </xsd:choice> </xsd:group> <xsd:complexType name="SubClassOf"> <xsd:complexContent> <xsd:extension base="owl:ClassAxiom"> <xsd:sequence> <xsd:group ref="owl:ClassExpression"/> <!-- subexpression <xsd:group ref="owl:ClassExpression"/> <!-- superexpression </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="SubClassOf" type="owl:SubClassOf"/> <xsd:complexType name="EquivalentClasses"> <xsd:complexContent> <xsd:extension base="owl:ClassAxiom"> <xsd:sequence> <xsd:group ref="owl:ClassExpression" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="EquivalentClasses" type="owl:EquivalentClasses"/> <xsd:complexType name="DisjointClasses"> <xsd:complexContent> <xsd:extension base="owl:ClassAxiom"> <xsd:sequence> <xsd:group ref="owl:ClassExpression" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DisjointClasses" type="owl:DisjointClasses"/> <xsd:complexType name="DisjointUnion"> <xsd:complexContent> <xsd:extension base="owl:ClassAxiom"> <xsd:sequence> <xsd:element ref="owl:Class"/> <xsd:group ref="owl:ClassExpression" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DisjointUnion" type="owl:DisjointUnion"/> <!-- Object property axioms <xsd:complexType name="ObjectPropertyAxiom" abstract="true"> <xsd:complexContent> <xsd:extension base="owl:Axiom"/> </xsd:complexContent> </xsd:complexType> <xsd:group name="ObjectPropertyAxiom"> <xsd:choice> <xsd:element ref="owl:SubObjectPropertyOf"/> <xsd:element ref="owl:EquivalentObjectProperties"/> <xsd:element ref="owl:DisjointObjectProperties"/> <xsd:element ref="owl:InverseObjectProperties"/> <xsd:element ref="owl:ObjectPropertyDomain"/> <xsd:element ref="owl:ObjectPropertyRange"/> <xsd:element ref="owl:FunctionalObjectProperty"/> <xsd:element ref="owl:InverseFunctionalObjectProperty"/> <xsd:element ref="owl:ReflexiveObjectProperty"/> <xsd:element ref="owl:IrreflexiveObjectProperty"/> <xsd:element ref="owl:SymmetricObjectProperty"/> <xsd:element ref="owl:AsymmetricObjectProperty"/> <xsd:element ref="owl:TransitiveObjectProperty"/> </xsd:choice> </xsd:group> <xsd:complexType name="SubObjectPropertyOf"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:choice> <!-- subproperty expression property chain <xsd:group ref="owl:ObjectPropertyExpression"/> <xsd:element name="ObjectPropertyChain" type="owl:ObjectPropertyChain"/> </xsd:choice> <xsd:group ref="owl:ObjectPropertyExpression"/> <!-- superproperty expression </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="SubObjectPropertyOf" type="owl:SubObjectPropertyOf"/> <xsd:complexType name="ObjectPropertyChain"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:complexType> <xsd:complexType name="EquivalentObjectProperties"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="EquivalentObjectProperties" type="owl:EquivalentObjectProperties"/> <xsd:complexType name="DisjointObjectProperties"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DisjointObjectProperties" type="owl:DisjointObjectProperties"/> <xsd:complexType name="ObjectPropertyDomain"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> <xsd:group ref="owl:ClassExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectPropertyDomain" type="owl:ObjectPropertyDomain"/> <xsd:complexType name="ObjectPropertyRange"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> <xsd:group ref="owl:ClassExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectPropertyRange" type="owl:ObjectPropertyRange"/> <xsd:complexType name="InverseObjectProperties"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression" minOccurs="2" maxOccurs="2"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="InverseObjectProperties" type="owl:InverseObjectProperties"/> <xsd:complexType name="FunctionalObjectProperty"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="FunctionalObjectProperty" type="owl:FunctionalObjectProperty"/> <xsd:complexType name="InverseFunctionalObjectProperty"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="InverseFunctionalObjectProperty" type="owl:InverseFunctionalObjectProperty"/> <xsd:complexType name="ReflexiveObjectProperty"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ReflexiveObjectProperty" type="owl:ReflexiveObjectProperty"/> <xsd:complexType name="IrreflexiveObjectProperty"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="IrreflexiveObjectProperty" type="owl:IrreflexiveObjectProperty"/> <xsd:complexType name="SymmetricObjectProperty"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="SymmetricObjectProperty" type="owl:SymmetricObjectProperty"/> <xsd:complexType name="AsymmetricObjectProperty"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="AsymmetricObjectProperty" type="owl:AsymmetricObjectProperty"/> <xsd:complexType name="TransitiveObjectProperty"> <xsd:complexContent> <xsd:extension base="owl:ObjectPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="TransitiveObjectProperty" type="owl:TransitiveObjectProperty"/> <!-- Data property axioms <xsd:complexType name="DataPropertyAxiom" abstract="true"> <xsd:complexContent> <xsd:extension base="owl:Axiom"/> </xsd:complexContent> </xsd:complexType> <xsd:group name="DataPropertyAxiom"> <xsd:choice> <xsd:element ref="owl:SubDataPropertyOf"/> <xsd:element ref="owl:EquivalentDataProperties"/> <xsd:element ref="owl:DisjointDataProperties"/> <xsd:element ref="owl:DataPropertyDomain"/> <xsd:element ref="owl:DataPropertyRange"/> <xsd:element ref="owl:FunctionalDataProperty"/> </xsd:choice> </xsd:group> <xsd:complexType name="SubDataPropertyOf"> <xsd:complexContent> <xsd:extension base="owl:DataPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression"/> <!-- subproperty expression <xsd:group ref="owl:DataPropertyExpression"/> <!-- superproperty expression </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="SubDataPropertyOf" type="owl:SubDataPropertyOf"/> <xsd:complexType name="EquivalentDataProperties"> <xsd:complexContent> <xsd:extension base="owl:DataPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="EquivalentDataProperties" type="owl:EquivalentDataProperties"/> <xsd:complexType name="DisjointDataProperties"> <xsd:complexContent> <xsd:extension base="owl:DataPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DisjointDataProperties" type="owl:DisjointDataProperties"/> <xsd:complexType name="DataPropertyDomain"> <xsd:complexContent> <xsd:extension base="owl:DataPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression"/> <xsd:group ref="owl:ClassExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataPropertyDomain" type="owl:DataPropertyDomain"/> <xsd:complexType name="DataPropertyRange"> <xsd:complexContent> <xsd:extension base="owl:DataPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression"/> <xsd:group ref="owl:DataRange"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataPropertyRange" type="owl:DataPropertyRange"/> <xsd:complexType name="FunctionalDataProperty"> <xsd:complexContent> <xsd:extension base="owl:DataPropertyAxiom"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="FunctionalDataProperty" type="owl:FunctionalDataProperty"/> <!-- Datatype definitions <xsd:complexType name="DatatypeDefinition"> <xsd:complexContent> <xsd:extension base="owl:Axiom"> <xsd:sequence> <xsd:element ref="owl:Datatype"/> <xsd:group ref="owl:DataRange"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DatatypeDefinition" type="owl:DatatypeDefinition"/> <!-- Key axioms <xsd:complexType name="HasKey"> <xsd:complexContent> <xsd:extension base="owl:Axiom"> <xsd:sequence> <xsd:group ref="owl:ClassExpression"/> <xsd:group ref="owl:ObjectPropertyExpression" minOccurs="0" maxOccurs="unbounded"/> <xsd:group ref="owl:DataPropertyExpression" minOccurs="0" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="HasKey" type="owl:HasKey"/> <!-- Assertions <xsd:complexType name="Assertion" abstract="true"> <xsd:complexContent> <xsd:extension base="owl:Axiom"/> </xsd:complexContent> </xsd:complexType> <xsd:group name="Assertion"> <xsd:choice> <xsd:element ref="owl:SameIndividual"/> <xsd:element ref="owl:DifferentIndividuals"/> <xsd:element ref="owl:ClassAssertion"/> <xsd:element ref="owl:ObjectPropertyAssertion"/> <xsd:element ref="owl:NegativeObjectPropertyAssertion"/> <xsd:element ref="owl:DataPropertyAssertion"/> <xsd:element ref="owl:NegativeDataPropertyAssertion"/> </xsd:choice> </xsd:group> <xsd:complexType name="SameIndividual"> <xsd:complexContent> <xsd:extension base="owl:Assertion"> <xsd:sequence> <xsd:group ref="owl:Individual" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="SameIndividual" type="owl:SameIndividual"/> <xsd:complexType name="DifferentIndividuals"> <xsd:complexContent> <xsd:extension base="owl:Assertion"> <xsd:sequence> <xsd:group ref="owl:Individual" minOccurs="2" maxOccurs="unbounded"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DifferentIndividuals" type="owl:DifferentIndividuals"/> <xsd:complexType name="ClassAssertion"> <xsd:complexContent> <xsd:extension base="owl:Assertion"> <xsd:sequence> <xsd:group ref="owl:ClassExpression"/> <xsd:group ref="owl:Individual"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ClassAssertion" type="owl:ClassAssertion"/> <xsd:complexType name="ObjectPropertyAssertion"> <xsd:complexContent> <xsd:extension base="owl:Assertion"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> <xsd:group ref="owl:Individual"/> <!-- source invididual <xsd:group ref="owl:Individual"/> <!-- target individual </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="ObjectPropertyAssertion" type="owl:ObjectPropertyAssertion"/> <xsd:complexType name="NegativeObjectPropertyAssertion"> <xsd:complexContent> <xsd:extension base="owl:Assertion"> <xsd:sequence> <xsd:group ref="owl:ObjectPropertyExpression"/> <xsd:group ref="owl:Individual"/> <!-- source invididual <xsd:group ref="owl:Individual"/> <!-- target individual </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="NegativeObjectPropertyAssertion" type="owl:NegativeObjectPropertyAssertion"/> <xsd:complexType name="DataPropertyAssertion"> <xsd:complexContent> <xsd:extension base="owl:Assertion"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression"/> <xsd:group ref="owl:Individual"/> <!-- source invididual <xsd:element ref="owl:Literal"/> <!-- target individual </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="DataPropertyAssertion" type="owl:DataPropertyAssertion"/> <xsd:complexType name="NegativeDataPropertyAssertion"> <xsd:complexContent> <xsd:extension base="owl:Assertion"> <xsd:sequence> <xsd:group ref="owl:DataPropertyExpression"/> <xsd:group ref="owl:Individual"/> <!-- source invididual <xsd:element ref="owl:Literal"/> <!-- target individual </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="NegativeDataPropertyAssertion" type="owl:NegativeDataPropertyAssertion"/> <!-- Annotations <xsd:complexType name="IRI"> <xsd:simpleContent> <xsd:extension base="xsd:anyURI"> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:extension> </xsd:simpleContent> </xsd:complexType> <xsd:element name="IRI" type="owl:IRI"/> <xsd:complexType name="AbbreviatedIRI"> <xsd:simpleContent> <xsd:extension base="owl:abbreviatedIRI"> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:extension> </xsd:simpleContent> </xsd:complexType> <xsd:element name="AbbreviatedIRI" type="owl:AbbreviatedIRI"/> <xsd:group name="AnnotationSubject"> <xsd:choice> <xsd:element ref="owl:IRI"/> <xsd:element ref="owl:AbbreviatedIRI"/> <xsd:element ref="owl:AnonymousIndividual"/> </xsd:choice> </xsd:group> <xsd:group name="AnnotationValue"> <xsd:choice> <xsd:element ref="owl:IRI"/> <xsd:element ref="owl:AbbreviatedIRI"/> <xsd:element ref="owl:AnonymousIndividual"/> <xsd:element ref="owl:Literal"/> </xsd:choice> </xsd:group> <xsd:complexType name="Annotation"> <xsd:sequence> <xsd:group ref="owl:annotationAnnotations"/> <xsd:element ref="owl:AnnotationProperty"/> <xsd:group ref="owl:AnnotationValue"/> </xsd:sequence> <xsd:attributeGroup ref="xml:specialAttrs"/> </xsd:complexType> <xsd:element name="Annotation" type="owl:Annotation"/> <xsd:group name="axiomAnnotations"> <xsd:sequence> <xsd:element ref="owl:Annotation" minOccurs="0" maxOccurs="unbounded"/> </xsd:sequence> </xsd:group> <xsd:group name="ontologyAnnotations"> <xsd:sequence> <xsd:element ref="owl:Annotation" minOccurs="0" maxOccurs="unbounded"/> </xsd:sequence> </xsd:group> <xsd:group name="annotationAnnotations"> <xsd:sequence> <xsd:element ref="owl:Annotation" minOccurs="0" maxOccurs="unbounded"/> </xsd:sequence> </xsd:group> <!-- Annotation axioms <xsd:complexType name="AnnotationAxiom" abstract="true"> <xsd:complexContent> <xsd:extension base="owl:Axiom"/> </xsd:complexContent> </xsd:complexType> <xsd:group name="AnnotationAxiom"> <xsd:choice> <xsd:element ref="owl:AnnotationAssertion"/> <xsd:element ref="owl:SubAnnotationPropertyOf"/> <xsd:element ref="owl:AnnotationPropertyDomain"/> <xsd:element ref="owl:AnnotationPropertyRange"/> </xsd:choice> </xsd:group> <xsd:complexType name="AnnotationAssertion"> <xsd:complexContent> <xsd:extension base="owl:AnnotationAxiom"> <xsd:sequence> <xsd:element ref="owl:AnnotationProperty"/> <xsd:group ref="owl:AnnotationSubject"/> <xsd:group ref="owl:AnnotationValue"/> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="AnnotationAssertion" type="owl:AnnotationAssertion"/> <xsd:complexType name="SubAnnotationPropertyOf"> <xsd:complexContent> <xsd:extension base="owl:AnnotationAxiom"> <xsd:sequence> <xsd:element ref="owl:AnnotationProperty"/> <!-- subproperty <xsd:element ref="owl:AnnotationProperty"/> <!-- superproperty </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="SubAnnotationPropertyOf" type="owl:SubAnnotationPropertyOf"/> <xsd:complexType name="AnnotationPropertyDomain"> <xsd:complexContent> <xsd:extension base="owl:AnnotationAxiom"> <xsd:sequence> <xsd:element ref="owl:AnnotationProperty"/> <xsd:choice> <xsd:element ref="owl:IRI"/> <xsd:element ref="owl:AbbreviatedIRI"/> </xsd:choice> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="AnnotationPropertyDomain" type="owl:AnnotationPropertyDomain"/> <xsd:complexType name="AnnotationPropertyRange"> <xsd:complexContent> <xsd:extension base="owl:AnnotationAxiom"> <xsd:sequence> <xsd:element ref="owl:AnnotationProperty"/> <xsd:choice> <xsd:element ref="owl:IRI"/> <xsd:element ref="owl:AbbreviatedIRI"/> </xsd:choice> </xsd:sequence> </xsd:extension> </xsd:complexContent> </xsd:complexType> <xsd:element name="AnnotationPropertyRange" type="owl:AnnotationPropertyRange"/></xsd:schema> OWL XML serialization ontology document OWL XML serialization ontology document sequence Unicode characters accessible IRI means standard protocols be parsed XML document XML schema defined document constraints described Section document. Appendix: Derivation Functional Syntax XML schema been obtained straightforwardtranslation structural specification OWL Specification Specification] following way: UML class intended be instantiated mapped global element, elements attributes correspond components UML class. such element XML Schema type same name. UML class not intended be instantiated directly, instead gathers together commonalities, mapped global element group, choice members correspond children UML class. select few, there corresponding global, abstract XML Schema type same name. particles content model group are mapped corresponding subtypes group type. XML Schema's type system not support multiple inheritance, abstract UML classes be directly mapped XML Schema type hierarchy intended result. case there are multiple parent classes, only most useful parents are mapped active type hierarchy. excluded groups are: Entity AnnotationSubject AnnotationValue groups are mere documentation schema, therefore are not included types: axiomAnnotations ontologyAnnotations annotationAnnotations XML schema thus captures structure OWL entities, expressions, axioms. Not XML documents are legal according schema correspond structural correct OWL ontologies. get OWL Ontology OWL XML serialization ontology documentdescribes Resolve IRIs expand abbreviated IRIs described way. Get imports closure ontology. determine OWL Ontology structurally correct, Check global constraints axioms. Check typing constraints. axiom XML syntax OWL complete information type entities Therefore OWL XML Syntax parsing process simpler canonical parsing process Section OWL Specification Specification]. Appendix: Internet Media Type, File Extension, Macintosh File Type Contact Ivan Herman Sandro Hawke See also Register Media Type W3C Specification MIME] Internet Media Type registration, consistency use Consistency]. Internet Media Type MIME Type OWL XML Serialization application/owl+xml. recommended OWL XML Serialization files have extension lowercase) platforms. recommended OWL XML Serialization files stored Macintosh HFS file systems be given file type TEXT. information be submitted IESG review, approval, registration IANA. Type name application Subtype name owl+xml Required parameters None Optional parameters charset parameter be required transfering non-ASCII data protocols. Encoding considerations syntax OWL XML Serialization expressed code points Unicode Security considerations OWL XML Serialization uses IRIs term identifiers. Applications interpreting data expressed OWL XML Serialization address security issues Internationalized Resource Identifiers Section well Uniform Resource Identifiers Generic Syntax Section Multiple IRIs have same appearance. Characters different scripts look similar Cyrillic appear similar Latin character followed combining characters have same visual representation character SMALL LETTER E followed COMBINING ACUTE ACCENT same visual representation LATIN SMALL LETTER E ACUTE). person application writing interpreting data OWL XML Serialization take care use IRI matches intended semantics, avoid IRIs look similar. Further information matching similar characters be found Unicode Security Considerations Internationalized Resource Identifiers Section Interoperability considerations are known interoperability issues. Published specification specification. Applications use media type None current time. Additional information None. Magic number(s) OWL XML documents are XML documents thus have initial strings similar XML document. File extension(s) Base URI XML. Macintosh file type code(s) Person email address contact further information Ivan Herman, ivan@w3.org Sandro Hawke, sandro@w3.org. send technical comments questions OWL public-owl-comments@w3.org, mailing list public archive http://lists.w3.org/Archives/Public/public-owl-comments/ Intended usage COMMON Restrictions usage None Author/Change controller OWL XML Serialization product W3C OWL Working Group; W3C reserves change control specification. Appendix: Change Log Changes Recommendation section changes document Recommendation October, publication XML Schema Definition Language Part Datatypes Recommendation April elements OWL are based XSD are now considered required, note detailing optional dependency XSD Candidate Recommendation April, been removed Document" section. Minor typographical errors were corrected detailed OWL Errata page. Changes Proposed Recommendation section changes document Proposed Recommendation September, note use GRDDL was added introduction. editor's note future definition GRDDL transformation mechanism was removed. minor editorial changes were made. Changes Candidate Recommendation section changes document Candidate Recommendation June, were few bug fixes schema http://www.w3.org/2007/OWL/wiki/OWL_XML_Schema). minor editorial changes were made. Changes Last Call section changes document Last Call Working Draft April, minor editorial changes were made. Acknowledgments starting point development OWL was OWL1.1 member submission, result user developer feedback, particular information gathered OWL Experiences Directions Workshop series. working group also considered postponed issues WebOnt Working Group. document been produced OWL Working Group contents reflect extensive discussions Working Group whole.The editors extend special thanks toKendall Clark Parsia),Achille Fokoue Corporation) andMichael Grove Parsia),Rinke Hoekstra Amsterdam)for thorough reviews, Liam Quim forhis advice XML Schema, Dmitry Repchevsky Supercomputing Centre) catching bug schema. regular attendees meetings OWL Working Group time publication document were:Jie Bao Calvanese University Bozen-Bolzano),Bernardo Cuenca Grau University Computing Laboratory),Martin Dzbor University),Achille Fokoue Corporation),Christine Golbreich Versailles St-Quentin LIRMM),Sandro Hawke Herman Hoekstra Amsterdam),Ian Horrocks University Computing Laboratory),Elisa Kendall Software),Markus Krötzsch Lutz Bremen),Deborah L. McGuinness Motik University Computing Laboratory),Jeff Pan Aberdeen),Bijan Parsia Manchester),Peter F. Patel-Schneider Labs Research, Alcatel-Lucent),Sebastian Rudolph Ruttenberg Commons),Uli Sattler Manchester),Michael Schneider Smith Parsia),Evan Wallace Wu Corporation), andAntoine Zimmermann Galway).We also thank members working group:Jeremy Carroll,Jim Hendler, andVipul Kashyap. References Normative References Gleaning Resource Descriptions Dialects Languages Dan Connolly, ed. W3C Recommendation, September http://www.w3.org/TR/2007/REC-grddl-20070911/. Latest version available http://www.w3.org/TR/grddl/. Specification] OWL Web Ontology Language: Structural Specification Functional-Style Syntax Edition) Boris Motik, Peter F. Patel-Schneider, Bijan Parsia, eds. W3C Recommendation, December http://www.w3.org/TR/2012/REC-owl2-syntax-20121211/. Latest version available http://www.w3.org/TR/owl2-syntax/. RFC Key words use RFCs Indicate Requirement Levels. Network Working Group, S. Bradner. IETF, March http://www.ietf.org/rfc/rfc2119.txt Unicode Standard. Unicode Consortium, Version ISBN 0-321-48091-0, updated time time publication new versions. http://www.unicode.org/unicode/standard/versions/ latest version additional information versions standard Unicode Character Database). Base] XML Base Edition). Jonathan Marsh Richard Tobin, eds. W3C Recommendation, January http://www.w3.org/TR/2009/REC-xmlbase-20090128/. Latest version available http://www.w3.org/TR/xmlbase/. Schema] W3C XML Schema Definition Language Part Structures. Shudi Gao, C. M. Sperberg-McQueen, Henry S. Thompson, eds. W3C Candidate Recommendation, April http://www.w3.org/TR/2009/CR-xmlschema11-1-20090430/. Latest version available http://www.w3.org/TR/xmlschema11-1/. Nonnormative References Object Model] Document Object Model Technical Reports Consistency] Internet Media Type registration, consistency use. Tim Bray, ed. W3C TAG Finding, April Primer] OWL Web Ontology Language: Primer Edition) Pascal Hitzler, Markus Krötzsch, Bijan Parsia, Peter F. Patel-Schneider, Sebastian Rudolph, eds. W3C Recommendation, December http://www.w3.org/TR/2012/REC-owl2-primer-20121211/. Latest version available http://www.w3.org/TR/owl2-primer/. Profiles] OWL Web Ontology Language: Profiles Edition) Boris Motik, Bernardo Cuenca Grau, Ian Horrocks, Zhe Wu, Achille Fokoue, Carsten Lutz, eds. W3C Recommendation, December http://www.w3.org/TR/2012/REC-owl2-profiles-20121211/. Latest version available http://www.w3.org/TR/owl2-profiles/. MIME] Register Internet Media Type W3C Spec. Philippe Le Hégaret, ed. W3C Guidebook. RFC Uniform Resource Identifier Generic Syntax. T. Berners-Lee, R. Fielding, L. Masinter. IETF, January http://www.ietf.org/rfc/rfc3986.txt RFC Internationalized Resource Identifiers M. Duerst M. Suignard. IETF, January http://www.ietf.org/rfc/rfc3987.txt Unicode Security Considerations. Mark Davis Michel Suignard. Unicode technical report July http://www.unicode.org/reports/tr36/tr36-7.html. Latest version available http://www.unicode.org/reports/tr36/. 