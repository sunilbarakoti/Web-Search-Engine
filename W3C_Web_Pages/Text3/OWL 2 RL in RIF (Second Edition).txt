OWL RL RIF Edition) OWL RL RIF Edition) W3C Working Group Note February version: http://www.w3.org/TR/2013/NOTE-rif-owl-rl-20130205/ Latest version: http://www.w3.org/TR/rif-owl-rl/ Previous version: http://www.w3.org/TR/2012/NOTE-rif-owl-rl-20121211/ Editors: Dave Reynolds, Hewlett Packard Laboratories color-coded version document showing changes made previous version also available. document also available non-normative formats: PDF version. Copyright W3C® ERCIM, Keio, Beihang), Rights Reserved. W3C liability, trademark document use rules apply. Abstract document shows OWL RL be implemented using RIF. analysis represent OWL RL inference rules RIF Core. OWL RL inference rules be implemented fixed RIF Core rule set mapping algorithm converts OWL RL ontology customized RIF Core rule set Status Document May Be Superseded section status document time publication. Other documents supersede document. list current W3C publications latest revision technical report be found W3C technical reports index http://www.w3.org/TR/. Set Documents document being published set documents: RIF Overview Edition) RIF Use Cases Requirements Edition) RIF Core Dialect Edition) RIF Basic Logic Dialect Edition) RIF Production Rule Dialect Edition) RIF Framework Logic Dialects Edition) RIF Datatypes Built-Ins Edition) RIF RDF OWL Compatibility Edition) OWL RL RIF Edition) document) RIF Combination XML data Edition) RIF RDF Edition) RIF Test Cases Edition) RIF Primer Edition) Document Unchanged have been changes body document previous version. details earlier changes, see change log. Send Comments send comments public-rif-comments@w3.org archive). work document Rule Interchange Format Working Group complete, comments be addressed errata future revisions. Open discussion developers welcome public-rif-dev@w3.org archive). Endorsement Publication Working Group Note not imply endorsement W3C Membership. draft document be updated, replaced obsoleted other documents time. inappropriate cite document other work progress. Patents document was produced group operating February W3C Patent Policy. W3C public list patent disclosures made connection deliverables group; page also instructions disclosing patent. individual actual knowledge patent individual Essential Claim(s) disclose information accordance section W3C Patent Policy. Table Contents Introduction Summary issues Background OWL RL Analysis OWL RL rules Triple pattern rules Inconsistency rules List rules Inconsistent pairs rules Property chain rule HasKey rule Forward intersectionOf rule Simple member rules Datatype rules Datatypes supported Datatype rules safety Rules supported datatypes References Acknowledgements Appendix: OWL RL ruleset presentation syntax Appendix: OWL RL RIF translation FixedRules templateRules algorithm Appendix: OWL RL ruleset XML syntax Appendix: Change Log Introduction OWL RL syntactic subset OWL amenable implementation using rule-based technologies. document providesa partial axiomatization OWL RDF-Based Semantics form first-order implications be used basis such implementation. note axiomatization be expressed set RIF rules RIF Core dialect. are approaches exploit correspondence RIF RDFgiven RDF OWL Compatibility]. first approach directly translate OWL RL rules RIF Core, simply interested ruleset skip directly OWL RL Rules]. second approach, expected tobe more scalable practice, translate source OWL RL ontology specialized RIF Core rule set, see OWL RL RIF translation]. Summary issues rules OWL RL semantics be divided categories rules. Triple pattern rules derive more RDF triples conjunction RDF triple patterns.Translation RIF means Frame formulae trivial. List rules involve processing RDF lists input graph are expressed OWL RL using informal elipsis notation. implementing OWL RL RIF there are ways handling such rules. be expressed set recursive rules traverse RDF list structures run-time be regarded templates given RDF input document, be translated set triple pattern rules part preprocessing step. define options note. Inconsistency rules indicate inconsistencies original RDF graph, are expressed first order rules derive propositional symbol false. suggest predicate symbol RIF namespace be used purpose. Datatype rules provide type checking value equality/inequality checking typed literals set supported datatypes. set datatypes supported RIF OWL align translation rules RIF largely straightforward. Putting together conclude implementation OWL RL rule-based inference RIF rules possible. exhibit fixed rule set translation algorithm generating ontology-specific ruleset. Background OWL RL OWL RL profile aimed applications require scalable reasoning return restriction expressive power. syntactic subset OWL amenable implementation using rule-based technologies together partial axiomatization OWL RDF-Based Semantics form first-order implications be used basis such implementation. ontologies satisfying syntactic constraints OWL RL profile then suitable rule-based implementation provide sound complete entailment checking conjunctive query answering long query also OWL RL syntactic restrictions). purpose note provide translation OWL RL rules RIF notation. aim translation be faithful OWL RL semantics so follow hold: Theorem Let O1 be OWL RL ontologies satisying following properties: O1 IRI used more type entity IRIs used as, say, class individual); O1 not contain SubAnnotationPropertyOf, AnnotationPropertyDomain, AnnotationPropertyRange axioms; axiom assertion form specified a1, named individuals: ClassAssertion( C C class, ObjectPropertyAssertion( OP a1 a2 OP object property, DataPropertyAssertion( DP DP data property, SameIndividual( a1 Let R(O1) be fixed RIF rule set described OWL RL ruleset presentation syntax] rule set derived O1 algorithm described OWL RL RIF translation]. Furthermore, let RDF(O1) RDF(O2) be translations O1 respectively, RDF graphs specified OWL Mapping RDF Graphs Then, O1 OWL RDF-Based semantics only RIF-RDF combination R(O1) RDF(O1) generalized RDF graph RDF(O2) according notion simple entailment RIF-RDF combinations defined RDF OWL Compatibility]. Analysis OWL RL rules noted OWL RL rules fall categories pose different issues translation RIF. discuss category turn. Note section rules given RIF Core presentation syntax assume following prefix definitions: Document( Prefix(rdf <http://www.w3.org/1999/02/22-rdf-syntax-ns#>) Prefix(rdfs <http://www.w3.org/2000/01/rdf-schema#>) Prefix(owl <http://www.w3.org/2002/07/owl#>) Prefix(xsd <http://www.w3.org/2001/XMLSchema#>) Prefix(rif <http://www.w3.org/2007/rif#>) Prefix(func <http://www.w3.org/2007/rif-builtin-function#>) Prefix(pred <http://www.w3.org/2007/rif-builtin-predicate#>) Prefix(dc <http://purl.org/dc/terms/>) Triple pattern rules triple pattern rules take form: then T(s1, p1, o1) T(sn, pn, T(sr1, pr1, or1) T(srm, prm, orm) argument T predicate be variable, IRI literal value. Such rules be expressed RIF Core presentation syntax Group Forall sr1[pr1->or1] s1[p1->o1] sn[pn->on] Forall srm[prm->orm] s1[p1->o1] sn[pn->on] are variables occur ith rule. Inconsistency rules number OWL RL rules detect inconsistencies original RDF graph. express deriving distinguished propositional symbol false. example: then T(?p1, owl:propertyDisjointWith, T(?x, T(?x, false translate such rules using distinguished nullary predicate rif:error(). predicate derived then original RDF graph inconsistent OWL RL semantics. Note: practice implementers wish replace rif:error() unary predicate be used convey diagnostic information nature source inconsistency been detected. Thus rule be expressed RIF Core Forall ?p1 ?p2 ?x ?y rif:error() :- List rules number OWL RL rules involve processing OWL expressions include RDF lists. Such rules are expressed OWL RL templates possible list length, correspond set Triple Pattern rules. are ways approach RIF. rewrite such rules recursive rules traverse RDF list links introduce notion preprocessor OWL2 RL ontology RDF syntax translates corresponding RIF rule set templates rules have been instantiated lists actually occur source ontology. possible none rules able deduce new list entries such lists syntactic constraints OWL RL. approach using fixed recursive rule set appropriate enable single RIF OWL RL ruleset be published. translation approach yields rules are likely perform better practice. discuss direct forms List Rules here then describe Appendix: OWL RL RIF translation translation algorithm pre-processor approach. are several different patterns List Rules OWL RL ruleset, discuss group rules turn organized pattern involved. Inconsistent pairs rules rules check pair entries list match certain criterion do error signaled false propositional symbol). eq-diff2 T(?x, rdf:type, owl:AllDifferent) T(?x, owl:members, LIST[?y, T(?zi, owl:sameAs, false < j n prp-adp T(?x, rdf:type, owl:AllDisjointProperties) T(?x, owl:members, LIST[?y, T(?u, T(?u, false < j n cax-adc T(?x, rdf:type, owl:AllDisjointClasses) T(?x, owl:members, LIST[?y, T(?z, rdf:type, T(?z, rdf:type, false < j n rules be directly translated assistance utility predicate select element RDF list. <#eq-diff2> Forall ?x ?y ?z1 ?z2 ?iz1 ?iz2 rif:error() :- owl:AllDifferent] External(pred:list-contains(?y ?z1)) = External(func:index-of(?y ?z1)) External(pred:list-contains(?y ?z2)) = External(func:index-of(?y ?z2)) External( pred:numeric-not-equal <#eq-diff3> Forall?x ?y ?z1 ?z2 ?iz1 ?iz2 rif:error() :- owl:AllDifferent] External(pred:list-contains(?y ?z1)) = External(func:index-of(?y ?z1)) External(pred:list-contains(?y ?z2)) = External(func:index-of(?y ?z2)) External( pred:numeric-not-equal <#prp-adp> Forall ?x ?y ?o ?v ?l ?ix ?iy ?r rif:error() :- owl:AllDisjointProperties] External(pred:list-contains(?l ?x)) = External(func:index-of(?l ?x)) External(pred:list-contains(?l ?y)) = External(func:index-of(?l ?y)) External( pred:numeric-not-equal <#cax-adc> Forall ?x ?y ?o ?l ?ix ?iy ?r rif:error() :- owl:AllDisjointClasses] External(pred:list-contains(?l ?x)) = External(func:index-of(?l ?x)) External(pred:list-contains(?l ?y)) = External(func:index-of(?l ?y)) External( pred:numeric-not-equal rdf:type->?y]) Note: be tempting refactor rules defining predicate select disjoint pair elements list. However, such predicate be unsafe. Property chain rule rule expands list chain properties need be checked rule body. prp-spo2 T(?p, owl:propertyChainAxiom, LIST[?x, T(?u1, T(?u2, T(?un, T(?u1, be translated RIF Core rule set: <#prp-spo2> Forall ?p ?last ?pc ?start Forall ?start ?pc ?last ?p ?tl rdf:rest->?tl] Forall ?start ?pc ?last ?p rdf:rest->rdf:nil] writing logic rules predicates such be more common have first recursive rule then final fact: Forall ?start rdf:nil ?start) However, universal fact not safe thus not RIF Core. work trick unfolding final fact recursive rule yield pair rules shown way rule set still executable forward chaining strategy. Note such strategy generate large number irrelevant assertions apply RDF List source ontology irrespective list part owl:propertyChainAxiom. approach give better effective performance forward chaining strategy be recurse down property chain list cells need be checked. Such Forall ?p ?pc Forall ?x ?y Forall ?start ?pc ?last ?p ?tl rdf:rest->?tl] Forall ?start ?pc ?last ?p rdf:rest->rdf:nil] However, such optimizations further obscure rules omit rule set described here. alternative strategy, performant OWL RL reasoning required, be forward chaining engine provide custom builtins list scanning needed here. Detailed description such approach scope note. anticipate practical rule-based OWL RL implementations RIF introduce such optimizations employ ontology translation approach, such described appendix HasKey rule rule checks individuals are same virtual having same value list key properties. prp-key T(?c, owl:hasKey, LIST[?u, T(?x, rdf:type, T(?x, T(?x, T(?y, rdf:type, T(?y, T(?y, T(?x, owl:sameAs, be translated RIF rule set: <#prp-key> Forall ?x ?y ?c ?u Forall ?u ?x ?y rdf:rest->?tl] Forall ?u ?x ?y rdf:rest->rdf:nil] Similar considerations safety performance apply here previous section. Forward intersectionOf rule pattern test members list. cls-int1 T(?c, owl:intersectionOf, LIST[?x, T(?y, rdf:type, T(?y, rdf:type, T(?y, rdf:type, T(?y, rdf:type, be translated RIF rule set: <#cls-int1> Forall ?y ?c ?l Forall ?l ?y ?ty ?tl rdf:rest->?tl] Forall ?l ?y ?ty rdf:rest->rdf:nil] Similar considerations safety performance apply here previous sections. Simple member rules pattern test member list. cls-uni T(?c, owl:unionOf, LIST[?x, T(?y, rdf:type, T(?y, rdf:type, n cls-oo T(?c, owl:oneOf, LIST[?x, T(?yi, rdf:type, n cls-int2 T(?c, owl:intersectionOf, LIST[?x, T(?y, rdf:type, T(?y, rdf:type, T(?y, rdf:type, T(?y, rdf:type, scm-int T(?c, owl:intersectionOf, LIST[?x, T(?c, rdfs:subClassOf, T(?c, rdfs:subClassOf, T(?c, rdfs:subClassOf, scm-uni T(?c, owl:unionOf, LIST[?x, T(?c1, rdfs:subClassOf, T(?c2, rdfs:subClassOf, T(?cn, rdfs:subClassOf, be translated RIF rule set: <#cls-uni> Forall ?y ?c ?l ?ci External(pred:list-contains(?l ?ci)) <#cls-oo> Forall ?yi ?c ?l External(pred:list-contains(?l ?yi)) <#cls-int2> Forall ?y ?c ?ci ?l External(pred:list-contains(?l ?ci)) <#scm-int> Forall ?c ?ci ?l External(pred:list-contains(?l ?ci)) <#scm-uni> Forall ?c ?ci ?l External(pred:list-contains(?l ?ci)) predicate was defined earlier. Datatype rules OWL RL groups rules capture semantics supported datatypes. are: then dt-type1 true T(df, rdf:type, rdfs:Datatype) datatype dt supported OWL RL dt-type2 true T(lt, rdf:type, dt) literal lt datatype dt supported OWL RL such data value lt contained value space dt dt-eq true T(lt1, owl:sameAs, lt2) literals lt1 lt2 same data value dt-diff true T(lt1, owl:differentFrom, lt2) literals lt1 lt2 different data values dt-not-type T(lt, rdf:type, dt) false literal lt datatype dt supported OWL RL such data value lt not contained value space dt Datatypes supported RIF OWL RL working groups have now aligned set datatypes so datatypes required OWL RL are supported RIF. Datatype rules safety naive translation datatype rules require unsafe RIF rules. example, be tempted translate dt-eq Forall ?l1 ?l2 = ?l2 ensure safety ground variables relevant vocabulary. Referring Theorem-1 see entailment checks supported are limited do not include direct checks inequality, type non-type literals. Thus only need ground datatype rules literal vocabulary O1. include axioms form DataPropertyAssertion( DP RIF OWL have same notion identity datatypes support then such direct equality entailments are automatically satisfied. Thus sufficient rendering dt-eq be: Forall ?l1 ?l2 ?s1 ?s2 ?p1 ?p2 = ?l2 However, go further entailment checks are limited only indirect consequences rules then fold datatype rules directly rules include owl:sameAs premise. avoids generation quadratic number owl:sameAs owl:differentFrom assertions literals. Rules supported datatypes RIF representation data type rules supported datatypes reasonably straightforward. Type membership <#dt-type2> Group Forall ?lt rif:error() :- External(pred:is-literal-not-PlainLiteral( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-XMLLiteral( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-decimal( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-integer( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-nonNegativeInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-nonPositiveInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-positiveInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-negativeInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-long( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-int( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-short( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-byte( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedLong( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedInt( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedShort( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedByte( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-float( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-double( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-string( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-normalizedString( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-token( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-language( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-Name( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-NCName( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-NMTOKEN( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-boolean( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-hexBinary( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-base64Binary( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-anyURI( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-dateTime( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-dateTimeStamp Note rules assert literal type rdfs:Literal, well being direct type indicated type guard. value space rdfs:Literal union separate literal value spaces. RIF not provide direct support rdfs:Literal so there simple pred:is-literal guard available enable more transparent ruleset design. Type checking <#dt-not-type> Group Forall ?lt rif:error() :- External(pred:is-literal-not-PlainLiteral( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-XMLLiteral( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-decimal( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-integer( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-nonNegativeInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-nonPositiveInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-positiveInteger( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-negativeInteger( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-long( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-int( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-short( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-byte( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-unsignedLong( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-unsignedInt( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-unsignedShort( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-unsignedByte( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-float( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-double( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-string( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-normalizedString( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-token( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-language( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-Name( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-NCName( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-NMTOKEN( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-boolean( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-hexBinary( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-base64Binary( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-anyURI( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-dateTime( ?lt Forall ?lt ?dt rif:error() :- External(pred:is-literal-not-dateTimeStamp Equality inequalityAs noted fold literal equality inequality checks rules refer case only affected rule eq-diff1: <#eq-diff1> rif:error() :- So folding grounded literal rules dt-eq dt-diff arrive <#eq-diff1-literal1> rif:error() :- External(pred:literal-not-identical(?x ?y)) <#eq-diff1-literal2> rif:error() :- = ?y Fixed vocabulary rules are trivial asserted facts form: <#dt-type1-PlainLiteral> rdf:PlainLiteral rdfs:Datatype] etc References OWL Web Ontology Language: Profiles Edition) Boris Motik, Bernardo Cuenca Grau, Ian Horrocks, Zhe Wu, Achille Fokoue, Carsten Lutz, eds. W3C Recommendation, December http://www.w3.org/TR/2012/REC-owl2-profiles-20121211/. Latest version available http://www.w3.org/TR/owl2-profiles/. OWL Web Ontology Language: Mapping RDF Graphs Edition) Peter F. Patel-Schneider, Boris Motik, eds. W3C Recommendation, December http://www.w3.org/TR/2012/REC-owl2-mapping-to-rdf-20121211/. Latest version available http://www.w3.org/TR/owl2-mapping-to-rdf/. OWL Web Ontology Language: RDF-Based Semantics Edition) Michael Schneider, editor. W3C Recommendation, December http://www.w3.org/TR/2012/REC-owl2-rdf-based-semantics-20121211/. Latest version available http://www.w3.org/TR/owl2-rdf-based-semantics/. RDF OWL Compatibility] RIF RDF OWL Compatibility Edition) Jos Bruijn, Chris Welty, eds. W3C Recommendation, February http://www.w3.org/TR/2013/REC-rif-rdf-owl-20130205/. Latest version available http://www.w3.org/TR/rif-rdf-owl/. Acknowledgements document product Rules Interchange Format Working Group members deserve recognition time commitment. editor special thanks Jos Bruijn Axel Polleres thorough reviews helpful comments; working group chairs, Chris Welty Christian Sainte-Marie, invaluable technical help inspirational leadership; W3C staff contact Sandro Hawke, constant source ideas, help, feedback. regular attendees meetings Rule Interchange Format Working Group time publication were: Adrian Paschke Universitaet Berlin), Axel Polleres Chris Welty Christian Sainte Marie Dave Reynolds Gary Hallmark Harold Boley Hassan Aït-Kaci Jos Bruijn Leora Morgenstern Michael Kifer Brook), Mike Dean Sandro Hawke Stella Mitchell Appendix: OWL RL ruleset presentation syntax appendix provide RIF Core presentation syntax translation complete OWL RL ruleset.We divide rules documents simple triple rules translated OWL RL rule format), List rules datatype rules. Editor's Note: rules are believed be correct. However, original version was developed various manual edits have been made toconform changes RIF OWL RL. Mechanical verification be required final publication. Simple triple rules Document Prefix(rdf <http://www.w3.org/1999/02/22-rdf-syntax-ns#>) Prefix(rdfs <http://www.w3.org/2000/01/rdf-schema#>) Prefix(owl <http://www.w3.org/2002/07/owl#>) Prefix(xsd <http://www.w3.org/2001/XMLSchema#>) Prefix(rif <http://www.w3.org/2007/rif#>) Prefix(func <http://www.w3.org/2007/rif-builtin-function#>) Prefix(pred <http://www.w3.org/2007/rif-builtin-predicate#>) Prefix(dc <http://purl.org/dc/terms/>) Group <#eq-ref> <#eq-ref1> <#eq-ref2> <#eq-sym> <#eq-trans> <#eq-rep-s> <#eq-rep-p> <#eq-rep-o> <#eq-diff1> rif:error() :- <#prp-ap-label> rdfs:label[rdf:type->owl:AnnotationProperty] <#prp-ap-comment> rdfs:comment[rdf:type->owl:AnnotationProperty] <#prp-ap-seeAlso> rdfs:seeAlso[rdf:type->owl:AnnotationProperty] <#prp-ap-isDefinedBy> rdfs:isDefinedBy[rdf:type->owl:AnnotationProperty] <#prp-ap-deprecated> owl:deprecated[rdf:type->owl:AnnotationProperty] <#prp-ap-priorVersion> owl:priorVersion[rdf:type->owl:AnnotationProperty] <#prp-ap-backwardCompatibleWith> owl:backwardCompatibleWith[rdf:type->owl:AnnotationProperty] <#prp-ap-incompatibleWith> owl:incompatibleWith[rdf:type->owl:AnnotationProperty] <#prp-dom> <#prp-rng> <#prp-fp> <#prp-ifp> <#prp-irp> rif:error() :- <#prp-symp> <#prp-asyp> rif:error() :- <#prp-trp> <#prp-spo1> <#prp-eqp1> <#prp-eqp2> <#prp-pdw> rif:error() :- <#prp-inv1> <#prp-inv2> <#cls-thing> owl:Thing[rdf:type->owl:Class] <#cls-nothing1> owl:Nothing[rdf:type->owl:Class] <#cls-nothing2> rif:error() :- ?x[rdf:type->owl:Nothing]) <#cls-svf1> <#cls-svf2> <#cls-avf> <#cls-hv1> <#cls-hv2> <#cls-maxc1> rif:error() :- <#cls-maxc2> <#cls-maxqc1> rif:error() :- <#cls-maxqc2> rif:error() :- <#cls-maxqc3> <#cls-maxqc4> <#cax-sco> <#cax-eqc1> <#cax-eqc2> <#cax-dw> rif:error() :- <#scm-cls> <#scm-cls1> <#scm-cls2> <#scm-cls3> owl:Nothing[rdfs:subClassOf->?c] :- ?c[rdf:type->owl:Class]) <#scm-sco> <#scm-eqc1> <#scm-eqc11> <#scm-eqc2> <#scm-op> <#scm-op1> <#scm-dp> <#scm-dp1> <#scm-spo> <#scm-eqp1> <#scm-eqp11> <#scm-eqp2> <#scm-dom1> <#scm-dom2> <#scm-rng1> <#scm-rng2> <#scm-hv> <#scm-svf1> <#scm-svf2> <#scm-avf1> <#scm-avf2> <#prp-npa1> rif:error() :- <#prp-npa2> rif:error() :- <#cax-dw> rif:error() :- <#cls-com> rif:error() :- List rules Document Prefix(rdf <http://www.w3.org/1999/02/22-rdf-syntax-ns#>) Prefix(rdfs <http://www.w3.org/2000/01/rdf-schema#>) Prefix(owl <http://www.w3.org/2002/07/owl#>) Prefix(xsd <http://www.w3.org/2001/XMLSchema#>) Prefix(rif <http://www.w3.org/2007/rif#>) Prefix(func <http://www.w3.org/2007/rif-builtin-function#>) Prefix(pred <http://www.w3.org/2007/rif-builtin-predicate#>) Prefix(dc <http://purl.org/dc/terms/>) Group <#eq-diff2> Forall ?x ?y ?z1 ?z2 ?iz1 ?iz2 rif:error() :- owl:AllDifferent] External(pred:list-contains(?y ?z1)) = External(func:index-of(?y ?z1)) External(pred:list-contains(?y ?z2)) = External(func:index-of(?y ?z2)) External( pred:numeric-not-equal <#eq-diff3> Forall?x ?y ?z1 ?z2 ?iz1 ?iz2 rif:error() :- owl:AllDifferent] External(pred:list-contains(?y ?z1)) = External(func:index-of(?y ?z1)) External(pred:list-contains(?y ?z2)) = External(func:index-of(?y ?z2)) External( pred:numeric-not-equal <#prp-adp> Forall ?x ?y ?o ?v ?l ?ix ?iy ?r rif:error() :- owl:AllDisjointProperties] External(pred:list-contains(?l ?x)) = External(func:index-of(?l ?x)) External(pred:list-contains(?l ?y)) = External(func:index-of(?l ?y)) External( pred:numeric-not-equal <#cax-adc> Forall ?x ?y ?o ?l ?ix ?iy ?r rif:error() :- owl:AllDisjointClasses] External(pred:list-contains(?l ?x)) = External(func:index-of(?l ?x)) External(pred:list-contains(?l ?y)) = External(func:index-of(?l ?y)) External( pred:numeric-not-equal rdf:type->?y]) <#prp-spo2> Forall ?p ?last ?pc ?start Forall ?start ?pc ?last ?p ?tl rdf:rest->?tl] Forall ?start ?pc ?last ?p rdf:rest->rdf:nil] Forall ?x ?y ?c ?u ?c Forall ?u ?x ?y rdf:rest->?tl] Forall ?u ?x ?y rdf:rest->rdf:nil] <#cls-int1> Forall ?y ?c ?l Forall ?l ?y ?ty ?tl rdf:rest->?tl] Forall ?l ?y ?ty rdf:rest->rdf:nil] <#prp-key> Forall ?x ?y ?c ?u Forall ?u ?x ?y rdf:rest->?tl] Forall ?u ?x ?y rdf:rest->rdf:nil] <#cls-uni> Forall ?y ?c ?l ?ci External(pred:list-contains(?l ?ci)) <#cls-oo> Forall ?yi ?c ?l External(pred:list-contains(?l ?yi)) <#cls-int2> Forall ?y ?c ?ci ?l External(pred:list-contains(?l ?ci)) <#scm-int> Forall ?c ?ci ?l External(pred:list-contains(?l ?ci)) <#scm-uni> Forall ?c ?ci ?l External(pred:list-contains(?l ?ci)) Datatype rules Document Prefix(rdf <http://www.w3.org/1999/02/22-rdf-syntax-ns#>) Prefix(rdfs <http://www.w3.org/2000/01/rdf-schema#>) Prefix(owl <http://www.w3.org/2002/07/owl#>) Prefix(xsd <http://www.w3.org/2001/XMLSchema#>) Prefix(rif <http://www.w3.org/2007/rif#>) Prefix(func <http://www.w3.org/2007/rif-builtin-function#>) Prefix(pred <http://www.w3.org/2007/rif-builtin-predicate#>) Prefix(dc <http://purl.org/dc/terms/>) Group <#dt-type2> Group Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-PlainLiteral( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-XMLLiteral( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-decimal( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-integer( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-nonNegativeInteger( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-nonPositiveInteger( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-positiveInteger( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-negativeInteger( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-long( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-int( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-short( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-byte( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-unsignedLong( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-unsignedInt( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-unsignedShort( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-unsignedByte( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-float( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-double( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-string( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-normalizedString( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-token( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-language( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-Name( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-NCName( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-NMTOKEN( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-boolean( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-hexBinary( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-base64Binary( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-anyURI( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-dateTime( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-dateTimeStamp <#dt-not-type> Forall ?lt rif:error() :- External(pred:is-literal-not-PlainLiteral( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-XMLLiteral( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-decimal( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-integer( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-nonNegativeInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-nonPositiveInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-positiveInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-negativeInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-long( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-int( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-short( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-byte( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedLong( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedInt( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedShort( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedByte( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-float( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-double( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-string( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-normalizedString( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-token( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-language( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-Name( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-NCName( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-NMTOKEN( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-boolean( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-hexBinary( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-base64Binary( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-anyURI( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-dateTime( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-dateTimeStamp <#eq-diff1-literal1> rif:error() :- External(pred:literal-not-identical(?x ?y)) <#eq-diff1-literal2> rif:error() :- = ?y <#dt-type1-PlainLiteral> rdf:PlainLiteral[rdf:type rdfs:Datatype](* <#dt-type1-decimal> xsd:decimal[rdf:type rdfs:Datatype](* <#dt-type1-integer> xsd:integer[rdf:type rdfs:Datatype](* <#dt-type1-double> xsd:double[rdf:type rdfs:Datatype](* <#dt-type1-string> xsd:string[rdf:type rdfs:Datatype](* <#dt-type1-dateTime> xsd:dateTime[rdf:type rdfs:Datatype](* <#dt-type1-XMLLiteral> rdf:XMLLiteral[rdf:type rdfs:Datatype](* <#dt-type1-Literal> rdfs:Literal[rdf:type rdfs:Datatype] <#dt-type1-nonNegativeInteger> xsd:nonNegativeInteger[rdf:type rdfs:Datatype](* <#dt-type1-nonPositiveInteger> xsd:nonPositiveInteger[rdf:type rdfs:Datatype](* <#dt-type1-positiveInteger> xsd:positiveInteger[rdf:type rdfs:Datatype](* <#dt-type1-negativeInteger> xsd:negativeInteger[rdf:type rdfs:Datatype](* <#dt-type1-long> xsd:long[rdf:type rdfs:Datatype](* <#dt-type1-int> xsd:int[rdf:type rdfs:Datatype](* <#dt-type1-short> xsd:short[rdf:type rdfs:Datatype](* <#dt-type1-byte> xsd:byte[rdf:type rdfs:Datatype](* <#dt-type1-unsignedLong> xsd:unsignedLong[rdf:type rdfs:Datatype](* <#dt-type1-unsignedInt> xsd:unsignedInt[rdf:type rdfs:Datatype](* <#dt-type1-unsignedShort> xsd:unsignedShort[rdf:type rdfs:Datatype](* <#dt-type1-unsignedByte> xsd:unsignedByte[rdf:type rdfs:Datatype](* <#dt-type1-normalizedString> xsd:normalizedString[rdf:type rdfs:Datatype](* <#dt-type1-token> xsd:token[rdf:type rdfs:Datatype](* <#dt-type1-language> xsd:language[rdf:type rdfs:Datatype](* <#dt-type1-Name> xsd:Name[rdf:type rdfs:Datatype](* <#dt-type1-NCName> xsd:NCName[rdf:type rdfs:Datatype](* <#dt-type1-NMTOKEN> xsd:NMTOKEN[rdf:type rdfs:Datatype] <#dt-type1-float> xsd:float[rdf:type rdfs:Datatype](* <#dt-type1-boolean> xsd:boolean[rdf:type rdfs:Datatype](* <#dt-type1-hexBinary> xsd:hexBinary[rdf:type rdfs:Datatype](* <#dt-type1-base64Binary> xsd:base64Binary[rdf:type rdfs:Datatype](* <#dt-type1-anyURI> xsd:anyURI[rdf:type rdfs:Datatype](* <#dt-type1-dateTimeStamp> xsd:dateTimeStamp rdfs:Datatype] Appendix: OWL RL RIF translation static set rules first appendix complete translation OWL RL rules RIF. rule set RIF Core dialect fairly inefficient, example handling lists rules. practice expect many OWL RL implementations instantiate ruleset particular ontology. instantiation process only OWL TBox axioms instantiated ruleset be applied other ontologies only differ virtue ABox assertions. here define algorithm instantiating RIF Core rule set given OWL RL ontology. Input: ontology O conforming OWL RL profile corresponding translation O RDF Graph RDF(O) specified OWL Mapping RDF Graphs RDF Mapping]. Output: RIF Core rule set R(RDF(O)) such RIF-RDF combination R(RDF(O)) RDF(O) same entailments combination R RDF(O) R static OWL RL rule set defined Algorithm: R(RDF(O)) = FixedRules templateRules( RDF(O) set FixedRules algorithms templateRules are defined Editor's Note: rules are believed be correct. However, original version was developed various manual edits have been made toconform changes RIF OWL RL. Mechanical verification be required final publication. FixedRules FixedRule ruleset following rules: <#eq-ref> <#eq-ref1> <#eq-ref2> <#eq-sym> <#eq-trans> <#eq-rep-s> <#eq-rep-p> <#eq-rep-o> <#eq-diff1> rif:error() :- <#prp-ap-label> rdfs:label[rdf:type->owl:AnnotationProperty] <#prp-ap-comment> rdfs:comment[rdf:type->owl:AnnotationProperty] <#prp-ap-seeAlso> rdfs:seeAlso[rdf:type->owl:AnnotationProperty] <#prp-ap-isDefinedBy> rdfs:isDefinedBy[rdf:type->owl:AnnotationProperty] <#prp-ap-deprecated> owl:deprecated[rdf:type->owl:AnnotationProperty] <#prp-ap-priorVersion> owl:priorVersion[rdf:type->owl:AnnotationProperty] <#prp-ap-backwardCompatibleWith> owl:backwardCompatibleWith[rdf:type->owl:AnnotationProperty] <#prp-ap-incompatibleWith> owl:incompatibleWith[rdf:type->owl:AnnotationProperty] <#prp-dom> <#prp-rng> <#cls-thing> owl:Thing[rdf:type->owl:Class] <#cls-nothing1> owl:Nothing[rdf:type->owl:Class] <#cls-nothing2> rif:error() :- ?x[rdf:type->owl:Nothing]) <#cax-sco> <#cax-eqc1> <#cax-eqc2> <#cax-dw> rif:error() :- <#scm-cls> <#scm-cls1> <#scm-cls2> <#scm-cls3> owl:Nothing[rdfs:subClassOf->?c] :- ?c[rdf:type->owl:Class]) <#scm-sco> <#scm-eqc1> <#scm-eqc11> <#scm-eqc2> <#scm-op> <#scm-op1> <#scm-dp> <#scm-dp1> <#scm-spo> <#scm-eqp1> <#scm-eqp11> <#scm-eqp2> <#scm-dom1> <#scm-dom2> <#scm-rng1> <#scm-rng2> <#dt-type2> Group Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-PlainLiteral( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-XMLLiteral( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-decimal( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-integer( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-nonNegativeInteger( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-nonPositiveInteger( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-positiveInteger( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-negativeInteger( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-long( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-int( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-short( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-byte( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-unsignedLong( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-unsignedInt( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-unsignedShort( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-unsignedByte( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-float( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-double( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-string( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-normalizedString( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-token( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-language( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-Name( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-NCName( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-NMTOKEN( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-boolean( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-hexBinary( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-base64Binary( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-anyURI( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-dateTime( ?lt Forall ?s ?p ?lt rdf:type->rdfs:Literal] External( pred:is-literal-dateTimeStamp <#dt-not-type> Forall ?lt rif:error() :- External(pred:is-literal-not-PlainLiteral( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-XMLLiteral( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-decimal( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-integer( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-nonNegativeInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-nonPositiveInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-positiveInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-negativeInteger( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-long( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-int( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-short( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-byte( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedLong( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedInt( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedShort( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-unsignedByte( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-float( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-double( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-string( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-normalizedString( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-token( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-language( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-Name( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-NCName( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-NMTOKEN( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-boolean( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-hexBinary( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-base64Binary( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-anyURI( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-dateTime( ?lt Forall ?lt rif:error() :- External(pred:is-literal-not-dateTimeStamp <#eq-diff1-literal1> rif:error() :- External(pred:literal-not-identical(?x ?y)) <#eq-diff1-literal2> rif:error() :- = ?y <#dt-type1-PlainLiteral> rdf:PlainLiteral[rdf:type rdfs:Datatype](* <#dt-type1-decimal> xsd:decimal[rdf:type rdfs:Datatype](* <#dt-type1-integer> xsd:integer[rdf:type rdfs:Datatype](* <#dt-type1-double> xsd:double[rdf:type rdfs:Datatype](* <#dt-type1-string> xsd:string[rdf:type rdfs:Datatype](* <#dt-type1-dateTime> xsd:dateTime[rdf:type rdfs:Datatype](* <#dt-type1-XMLLiteral> rdf:XMLLiteral[rdf:type rdfs:Datatype](* <#dt-type1-Literal> rdfs:Literal[rdf:type rdfs:Datatype] <#dt-type1-nonNegativeInteger> xsd:nonNegativeInteger[rdf:type rdfs:Datatype](* <#dt-type1-nonPositiveInteger> xsd:nonPositiveInteger[rdf:type rdfs:Datatype](* <#dt-type1-positiveInteger> xsd:positiveInteger[rdf:type rdfs:Datatype](* <#dt-type1-negativeInteger> xsd:negativeInteger[rdf:type rdfs:Datatype](* <#dt-type1-long> xsd:long[rdf:type rdfs:Datatype](* <#dt-type1-int> xsd:int[rdf:type rdfs:Datatype](* <#dt-type1-short> xsd:short[rdf:type rdfs:Datatype](* <#dt-type1-byte> xsd:byte[rdf:type rdfs:Datatype](* <#dt-type1-unsignedLong> xsd:unsignedLong[rdf:type rdfs:Datatype](* <#dt-type1-unsignedInt> xsd:unsignedInt[rdf:type rdfs:Datatype](* <#dt-type1-unsignedShort> xsd:unsignedShort[rdf:type rdfs:Datatype](* <#dt-type1-unsignedByte> xsd:unsignedByte[rdf:type rdfs:Datatype](* <#dt-type1-normalizedString> xsd:normalizedString[rdf:type rdfs:Datatype](* <#dt-type1-token> xsd:token[rdf:type rdfs:Datatype](* <#dt-type1-language> xsd:language[rdf:type rdfs:Datatype](* <#dt-type1-Name> xsd:Name[rdf:type rdfs:Datatype](* <#dt-type1-NCName> xsd:NCName[rdf:type rdfs:Datatype](* <#dt-type1-NMTOKEN> xsd:NMTOKEN[rdf:type rdfs:Datatype] <#dt-type1-float> xsd:float[rdf:type rdfs:Datatype](* <#dt-type1-boolean> xsd:boolean[rdf:type rdfs:Datatype](* <#dt-type1-hexBinary> xsd:hexBinary[rdf:type rdfs:Datatype](* <#dt-type1-base64Binary> xsd:base64Binary[rdf:type rdfs:Datatype](* <#dt-type1-anyURI> xsd:anyURI[rdf:type rdfs:Datatype](* <#dt-type1-dateTimeStamp> xsd:dateTimeStamp rdfs:Datatype] templateRules algorithm specify algorithm instantiating template rules means translation table. first column set RDF triple patterns p o) elements be variable prefix. second column template be instantiated. match triple patterns RDF(O) generate binding map maps variable triple pattern corresponding RDF Node RDF(O). template be processed binding map, replacing corresponding variables mapped values. example pair: Pattern Template rdf:type owl:SymmetricProperty) Forall ?x ?y Applied ontology containing following RDF triples: eg:p rdf:type owl:SymmetricProperty eg:q rdf:type owl:SymmetricProperty emit follow RIF rules: Forall ?x ?y order specify list related rules need define addition notation templates. Notation Interpretation rule text Emit rule text substituting occurrence variables binding map. outer be omitted cases there ambiguity. template} variable pattern bound RDF List. operator iterates element turn replacing binding map variable list entry processes enclosed template context new binding map. template} variable pattern bound RDF List. operator iterates element turn, skipping element identical replacing binding map variable list entry processes enclosed template context new binding map. Used template be replaced length RDFList bound Used template be replaced index current Used template be replaced index current templateRule algorithm defined using notation following set pattern/template pairs. Pattern Template rdf:type owl:FunctionalProperty) <#prp-fp> rdf:type owl:InverseFunctionalProperty]) <#prp-ifp> rdf:type owl:IrreflexiveProperty) <#prp-irp> rif:error() :- rdf:type owl:SymmetricProperty) <#prp-symp> rdf:type owl:AsymmetricProperty) <#prp-asyp> rif:error() :- rdf:type owl:TransitiveProperty) <#prp-trp> rdfs:subPropertyOf <#prp-spo1> owl:equivalentProperty <#prp-eqp1> <#prp-eqp2> owl:propertyDisjointWith <#prp-pdw> rif:error() :- owl:inverseOf <#prp-inv1> <#prp-inv2> owl:someValuesFrom owl:onProperty <#cls-svf1> owl:someValuesFrom owl:Thing) owl:onProperty <#cls-svf2> owl:allValuesFrom owl:onProperty <#cls-avf> owl:hasValue owl:onProperty <#cls-hv1> <#cls-hv2> owl:maxCardinality owl:onProperty <#cls-maxc1> rif:error() :- owl:maxCardinality owl:onProperty <#cls-maxc2> owl:maxQualifiedCardinality owl:onProperty owl:onClass <#cls-maxqc1> rif:error() :- owl:maxQualifiedCardinality owl:onProperty owl:onClass owl:Thing) <#cls-maxqc2> rif:error() :- owl:maxQualifiedCardinality owl:onProperty owl:onClass <#cls-maxqc3> owl:maxQualifiedCardinality owl:onProperty owl:onClass owl:Thing) <#cls-maxqc4> owl:hasValue owl:onProperty owl:hasValue owl:onProperty <#scm-hv> owl:someValuesFrom owl:onProperty owl:someValuesFrom owl:onProperty <#scm-svf1> owl:someValuesFrom owl:onProperty owl:someValuesFrom owl:onProperty <#scm-svf2> owl:allValuesFrom owl:onProperty owl:allValuesFrom owl:onProperty <#scm-avf1> owl:allValuesFrom owl:onProperty owl:allValuesFrom owl:onProperty <#scm-avf2> rdf:type owl:AllDifferent) owl:members <#eq-diff2> x) rif:error() :- rdf:type owl:AllDifferent) owl:distinctMembers <#eq-diff3> rif:error() :- rdf:type owl:AllDisjointProperties) <#prp-adp> Forall ?o ?v rif:error() :- rdf:type owl:AllDisjointClasses) <#cax-adc> Forall ?something rif:error() :- rdf:type->?y]) owl:propertyChainAxiom <#prp-spo2> Forall owl:hasKey <#prp-key> Forall ?x ?y ?v owl:intersectionOf <#cls-int2> Forall ?y owl:unionOf <#cls-uni> Forall ?y owl:oneOf <#cls-oo> owl:intersectionOf <#scm-int> Forall ?y owl:unionOf <#scm-uni> owl:sourceIndividual owl:assertionProperty owl:targetIndividual <#prp-npa1> rif:error() :- owl:sourceIndividual owl:assertionProperty owl:targetValue <#prp-npa2> rif:error() :- owl:disjointWith <#cax-dw> rif:error() :- owl:complementOf <#cls-com> rif:error() :- Appendix: OWL RL ruleset XML syntax provide fixed ruleset XML syntax split groups. Simple triple rules <?xml version="1.0" encoding="UTF-8"?><!DOCTYPE Document <!ENTITY rif <!ENTITY xs <!ENTITY rdf xmlns="&rif;"> <payload> <Group> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>o</Var> </declare> <declare> <Var>s</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>o</Var> </slot> </Frame> </if> <then> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>s</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>o</Var> </declare> <declare> <Var>s</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>o</Var> </slot> </Frame> </if> <then> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>p</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>o</Var> </declare> <declare> <Var>s</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>o</Var> </slot> </Frame> </if> <then> <Frame> <object> <Var>o</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>o</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>y</Var> </slot> </Frame> </if> <then> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>x</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>z</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>z</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>z</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>o</Var> </declare> <declare> <Var>s</Var> </declare> <declare> <Var>s2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>s2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>o</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>s2</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>o</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>o</Var> </declare> <declare> <Var>s</Var> </declare> <declare> <Var>p2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>o</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p2</Var> <Var>o</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>o</Var> </declare> <declare> <Var>s</Var> </declare> <declare> <Var>o2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>o</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>o2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>o</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>o2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#differentFrom</Const> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#label</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AnnotationProperty</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#comment</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AnnotationProperty</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#seeAlso</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AnnotationProperty</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#isDefinedBy</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AnnotationProperty</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#deprecated</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AnnotationProperty</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#priorVersion</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AnnotationProperty</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#backwardCompatibleWith</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AnnotationProperty</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#incompatibleWith</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AnnotationProperty</Const> </slot> </Frame> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>c</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#domain</Const> <Var>c</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>c</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#range</Const> <Var>c</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>y2</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#FunctionalProperty</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>y1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>y2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>x1</Var> </declare> <declare> <Var>x2</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#InverseFunctionalProperty</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x1</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x2</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>x1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>x2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>x</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#IrreflexiveProperty</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>x</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#SymmetricProperty</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>x</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AsymmetricProperty</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>x</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>z</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#TransitiveProperty</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>z</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>z</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p1</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p2</Var> <Var>y</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentProperty</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p1</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p2</Var> <Var>y</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentProperty</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p2</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p1</Var> <Var>y</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#propertyDisjointWith</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p1</Var> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p2</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#inverseOf</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p1</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Var>p2</Var> <Var>x</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#inverseOf</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>p2</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Var>p1</Var> <Var>x</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Thing</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Class</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Nothing</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Class</Const> </slot> </Frame> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Nothing</Const> </slot> </Frame> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>v</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#someValuesFrom</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>v</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>v</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>v</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#someValuesFrom</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Thing</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>v</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>v</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#allValuesFrom</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>v</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>v</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>y</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#hasValue</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#hasValue</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#maxCardinality</Const> <Const type="&xs;integer">0</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>y2</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#maxCardinality</Const> <Const type="&xs;integer">1</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>y1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>y2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>c</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#maxQualifiedCardinality</Const> <Const type="&xs;integer">0</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onClass</Const> <Var>c</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#maxQualifiedCardinality</Const> <Const type="&xs;integer">0</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onClass</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Thing</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>y2</Var> </declare> <declare> <Var>c</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#maxQualifiedCardinality</Const> <Const type="&xs;integer">1</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onClass</Const> <Var>c</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>y1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>y2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>y2</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#maxQualifiedCardinality</Const> <Const type="&xs;integer">1</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onClass</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Thing</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>y2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>y1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>y2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c1</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentClass</Const> <Var>c2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c1</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentClass</Const> <Var>c2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c1</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#disjointWith</Const> <Var>c2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c2</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Class</Const> </slot> </Frame> </if> <then> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Class</Const> </slot> </Frame> </if> <then> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentClass</Const> <Var>c</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Class</Const> </slot> </Frame> </if> <then> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Thing</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Class</Const> </slot> </Frame> </if> <then> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#Nothing</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <declare> <Var>c3</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c3</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c3</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentClass</Const> <Var>c2</Var> </slot> </Frame> </if> <then> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentClass</Const> <Var>c2</Var> </slot> </Frame> </if> <then> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c1</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c1</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentClass</Const> <Var>c2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#ObjectProperty</Const> </slot> </Frame> </if> <then> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#ObjectProperty</Const> </slot> </Frame> </if> <then> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentProperty</Const> <Var>p</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#DatatypeProperty</Const> </slot> </Frame> </if> <then> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#DatatypeProperty</Const> </slot> </Frame> </if> <then> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentProperty</Const> <Var>p</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p3</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>p2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p3</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p3</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentProperty</Const> <Var>p2</Var> </slot> </Frame> </if> <then> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentProperty</Const> <Var>p2</Var> </slot> </Frame> </if> <then> <Frame> <object> <Var>p2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p1</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>p2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p1</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#equivalentProperty</Const> <Var>p2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#domain</Const> <Var>c1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#domain</Const> <Var>c2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#domain</Const> <Var>c</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#domain</Const> <Var>c</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#range</Const> <Var>c1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#range</Const> <Var>c2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#range</Const> <Var>c</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#range</Const> <Var>c</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <declare> <Var>i</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#hasValue</Const> <Var>i</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#hasValue</Const> <Var>i</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>y2</Var> </declare> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <declare> <Var>y1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#someValuesFrom</Const> <Var>y1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#someValuesFrom</Const> <Var>y2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>y2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#someValuesFrom</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#someValuesFrom</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>y2</Var> </declare> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <declare> <Var>y1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#allValuesFrom</Const> <Var>y1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#allValuesFrom</Const> <Var>y2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>y2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c2</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>p2</Var> </declare> <declare> <Var>p1</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#allValuesFrom</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#allValuesFrom</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#onProperty</Const> <Var>p2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>p1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const> <Var>p2</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>c2</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c1</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>i1</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>i2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sourceIndividual</Const> <Var>i1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#assertionProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#targetIndividual</Const> <Var>i2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>i1</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>i2</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>i</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sourceIndividual</Const> <Var>i</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#assertionProperty</Const> <Var>p</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#targetValue</Const> <Var>lt</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>i</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <declare> <Var>x</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#disjointWith</Const> <Var>c2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c2</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c1</Var> </declare> <declare> <Var>c2</Var> </declare> <declare> <Var>x</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#complementOf</Const> <Var>c2</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c1</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c2</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> </Group> </payload></Document> Datatype rules <?xml version="1.0" encoding="UTF-8"?><!DOCTYPE Document <!ENTITY rif <!ENTITY xs <!ENTITY rdf xmlns="&rif;"> <payload> <Group> <sentence> <Group> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-PlainLiteral</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-XMLLiteral</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-decimal</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#decimal</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-integer</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#integer</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-nonNegativeInteger</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#nonNegativeInteger</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-nonPositiveInteger</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#nonPositiveInteger</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-positiveInteger</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#positiveInteger</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-negativeInteger</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#negativeInteger</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-long</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#long</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-int</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#int</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-short</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#short</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-byte</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#byte</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-unsignedLong</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedLong</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-unsignedInt</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedInt</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-unsignedShort</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedShort</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-unsignedByte</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedByte</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-float</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#float</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-double</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#double</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-string</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#string</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-normalizedString</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#normalizedString</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-token</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#token</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-language</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#language</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-Name</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#Name</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-NCName</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#NCName</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-NMTOKEN</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#NMTOKEN</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-boolean</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#boolean</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-hexBinary</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#hexBinary</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-base64Binary</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#base64Binary</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-anyURI</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#anyURI</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-dateTime</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#dateTime</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>s</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>lt</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-dateTimeStamp</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#dateTimeStamp</Const> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> </Group> </sentence> <sentence> <Group> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-PlainLiteral</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-XMLLiteral</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#decimal</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-decimal</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#integer</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-integer</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#nonNegativeInteger</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-nonNegativeInteger</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#nonPositiveInteger</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-nonPositiveInteger</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#positiveInteger</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-positiveInteger</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#negativeInteger</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-negativeInteger</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#long</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-long</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#int</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-int</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#short</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-short</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#byte</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-byte</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedLong</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-unsignedLong</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedInt</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-unsignedInt</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedShort</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-unsignedShort</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedByte</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-unsignedByte</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#float</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-float</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#double</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-double</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#string</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-string</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#normalizedString</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-normalizedString</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#token</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-token</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#language</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-language</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#Name</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-Name</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#NCName</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-NCName</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#NMTOKEN</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-NMTOKEN</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#boolean</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-boolean</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#hexBinary</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-hexBinary</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#base64Binary</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-base64Binary</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#anyURI</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-anyURI</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#dateTime</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-dateTime</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>lt</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>lt</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#dateTimeStamp</Const> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#is-literal-not-dateTimeStamp</Const> </op> <args ordered="yes"> <Var>lt</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> </Group> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>s1</Var> </declare> <declare> <Var>s2</Var> </declare> <declare> <Var>p1</Var> </declare> <declare> <Var>p2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s1</Var> </object> <slot ordered="yes"> <Var>p1</Var> <Var>x</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>s2</Var> </object> <slot ordered="yes"> <Var>p2</Var> <Var>y</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#literal-not-identical</Const> </op> <args ordered="yes"> <Var>x</Var> <Var>y</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>s1</Var> </declare> <declare> <Var>s2</Var> </declare> <declare> <Var>p1</Var> </declare> <declare> <Var>p2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>s1</Var> </object> <slot ordered="yes"> <Var>p1</Var> <Var>x</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>s2</Var> </object> <slot ordered="yes"> <Var>p2</Var> <Var>y</Var> </slot> </Frame> </formula> <formula> <Equal> <left> <Var>x</Var> </left> <right> <Var>y</Var> </right> </Equal> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#differentFrom</Const> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#decimal</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#integer</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#double</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#string</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#dateTime</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Literal</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#nonNegativeInteger</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#nonPositiveInteger</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#positiveInteger</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#negativeInteger</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#long</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#int</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#short</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#byte</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedLong</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedInt</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedShort</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#unsignedByte</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#normalizedString</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#token</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#language</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#Name</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#NCName</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#NMTOKEN</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#float</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#boolean</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#hexBinary</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#base64Binary</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#anyURI</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> <sentence> <Frame> <object> <Const type="&rif;iri">http://www.w3.org/2001/XMLSchema#dateTimeStamp</Const> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#Datatype</Const> </slot> </Frame> </sentence> </Group> </payload></Document> List rules <?xml version="1.0" encoding="UTF-8"?><!DOCTYPE Document <!ENTITY rif <!ENTITY xs <!ENTITY rdf xmlns="&rif;"> <payload> <Group> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>z1</Var> </declare> <declare> <Var>z2</Var> </declare> <declare> <Var>iz1</Var> </declare> <declare> <Var>iz2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AllDifferent</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#members</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>y</Var> <Var>z1</Var> </args> </Atom> </content> </External> </formula> <formula> <Equal> <left> <Var>iz1</Var> </left> <right> <External> <content> <Expr> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-function#index-of</Const> </op> <args ordered="yes"> <Var>y</Var> <Var>z1</Var> </args> </Expr> </content> </External> </right> </Equal> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>y</Var> <Var>z2</Var> </args> </Atom> </content> </External> </formula> <formula> <Equal> <left> <Var>iz2</Var> </left> <right> <External> <content> <Expr> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-function#index-of</Const> </op> <args ordered="yes"> <Var>y</Var> <Var>z2</Var> </args> </Expr> </content> </External> </right> </Equal> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#numeric-not-equal</Const> </op> <args ordered="yes"> <Var>iz1</Var> <Var>iz2</Var> </args> </Atom> </content> </External> </formula> <formula> <Frame> <object> <Var>z1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>z2</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>z1</Var> </declare> <declare> <Var>z2</Var> </declare> <declare> <Var>iz1</Var> </declare> <declare> <Var>iz2</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AllDifferent</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#distinctMembers</Const> <Var>y</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>y</Var> <Var>z1</Var> </args> </Atom> </content> </External> </formula> <formula> <Equal> <left> <Var>iz1</Var> </left> <right> <External> <content> <Expr> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-function#index-of</Const> </op> <args ordered="yes"> <Var>y</Var> <Var>z1</Var> </args> </Expr> </content> </External> </right> </Equal> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>y</Var> <Var>z2</Var> </args> </Atom> </content> </External> </formula> <formula> <Equal> <left> <Var>iz2</Var> </left> <right> <External> <content> <Expr> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-function#index-of</Const> </op> <args ordered="yes"> <Var>y</Var> <Var>z2</Var> </args> </Expr> </content> </External> </right> </Equal> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#numeric-not-equal</Const> </op> <args ordered="yes"> <Var>iz1</Var> <Var>iz2</Var> </args> </Atom> </content> </External> </formula> <formula> <Frame> <object> <Var>z1</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>z2</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>o</Var> </declare> <declare> <Var>v</Var> </declare> <declare> <Var>l</Var> </declare> <declare> <Var>ix</Var> </declare> <declare> <Var>iy</Var> </declare> <declare> <Var>r</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>r</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AllDisjointProperties</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>r</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#members</Const> <Var>l</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>x</Var> </args> </Atom> </content> </External> </formula> <formula> <Equal> <left> <Var>ix</Var> </left> <right> <External> <content> <Expr> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-function#index-of</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>x</Var> </args> </Expr> </content> </External> </right> </Equal> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>y</Var> </args> </Atom> </content> </External> </formula> <formula> <Equal> <left> <Var>iy</Var> </left> <right> <External> <content> <Expr> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-function#index-of</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>y</Var> </args> </Expr> </content> </External> </right> </Equal> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#numeric-not-equal</Const> </op> <args ordered="yes"> <Var>ix</Var> <Var>iy</Var> </args> </Atom> </content> </External> </formula> <formula> <Frame> <object> <Var>o</Var> </object> <slot ordered="yes"> <Var>x</Var> <Var>v</Var> </slot> <slot ordered="yes"> <Var>y</Var> <Var>v</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>o</Var> </declare> <declare> <Var>l</Var> </declare> <declare> <Var>ix</Var> </declare> <declare> <Var>iy</Var> </declare> <declare> <Var>r</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>r</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#AllDisjointClasses</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>r</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#members</Const> <Var>l</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>x</Var> </args> </Atom> </content> </External> </formula> <formula> <Equal> <left> <Var>ix</Var> </left> <right> <External> <content> <Expr> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-function#index-of</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>x</Var> </args> </Expr> </content> </External> </right> </Equal> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>y</Var> </args> </Atom> </content> </External> </formula> <formula> <Equal> <left> <Var>iy</Var> </left> <right> <External> <content> <Expr> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-function#index-of</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>y</Var> </args> </Expr> </content> </External> </right> </Equal> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#numeric-not-equal</Const> </op> <args ordered="yes"> <Var>ix</Var> <Var>iy</Var> </args> </Atom> </content> </External> </formula> <formula> <Frame> <object> <Var>o</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>x</Var> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>y</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif#error</Const> </op> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>p</Var> </declare> <declare> <Var>last</Var> </declare> <declare> <Var>pc</Var> </declare> <declare> <Var>start</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>p</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#propertyChainAxiom</Const> <Var>pc</Var> </slot> </Frame> </formula> <formula> <Atom> <op> <Const type="&rif;local">checkChain</Const> </op> <args ordered="yes"> <Var>start</Var> <Var>pc</Var> <Var>last</Var> </args> </Atom> </formula> </And> </if> <then> <Frame> <object> <Var>start</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>last</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>start</Var> </declare> <declare> <Var>pc</Var> </declare> <declare> <Var>last</Var> </declare> <declare> <Var>p</Var> </declare> <declare> <Var>tl</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>pc</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#first</Const> <Var>p</Var> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#rest</Const> <Var>tl</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>start</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>next</Var> </slot> </Frame> </formula> <formula> <Atom> <op> <Const type="&rif;local">checkChain</Const> </op> <args ordered="yes"> <Var>next</Var> <Var>tl</Var> <Var>last</Var> </args> </Atom> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;local">checkChain</Const> </op> <args ordered="yes"> <Var>start</Var> <Var>pc</Var> <Var>last</Var> </args> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>start</Var> </declare> <declare> <Var>pc</Var> </declare> <declare> <Var>last</Var> </declare> <declare> <Var>p</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>pc</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#first</Const> <Var>p</Var> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#rest</Const> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#nil</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>start</Var> </object> <slot ordered="yes"> <Var>p</Var> <Var>last</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;local">checkChain</Const> </op> <args ordered="yes"> <Var>start</Var> <Var>pc</Var> <Var>last</Var> </args> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>c</Var> </declare> <declare> <Var>u</Var> </declare> <declare> <Var>c</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#hasKey</Const> <Var>u</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </formula> <formula> <Atom> <op> <Const type="&rif;local">sameKey</Const> </op> <args ordered="yes"> <Var>u</Var> <Var>x</Var> <Var>y</Var> </args> </Atom> </formula> </And> </if> <then> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>y</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#first</Const> <Var>key</Var> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#rest</Const> <Var>tl</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>key</Var> <Var>v</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Var>key</Var> <Var>v</Var> </slot> </Frame> </formula> <formula> <Atom> <op> <Const type="&rif;local">sameKey</Const> </op> <args ordered="yes"> <Var>tl</Var> <Var>x</Var> <Var>y</Var> </args> </Atom> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;local">sameKey</Const> </op> <args ordered="yes"> <Var>u</Var> <Var>x</Var> <Var>y</Var> </args> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#first</Const> <Var>key</Var> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#rest</Const> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#nil</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>key</Var> <Var>v</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Var>key</Var> <Var>v</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;local">sameKey</Const> </op> <args ordered="yes"> <Var>u</Var> <Var>x</Var> <Var>y</Var> </args> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>y</Var> </declare> <declare> <Var>c</Var> </declare> <declare> <Var>l</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#intersectionOf</Const> <Var>l</Var> </slot> </Frame> </formula> <formula> <Atom> <op> <Const type="&rif;local">allTypes</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>y</Var> </args> </Atom> </formula> </And> </if> <then> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>l</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>ty</Var> </declare> <declare> <Var>tl</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>l</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#first</Const> <Var>ty</Var> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#rest</Const> <Var>tl</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>ty</Var> </slot> </Frame> </formula> <formula> <Atom> <op> <Const type="&rif;local">allTypes</Const> </op> <args ordered="yes"> <Var>tl</Var> <Var>y</Var> </args> </Atom> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;local">allTypes</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>y</Var> </args> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>l</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>ty</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>l</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#first</Const> <Var>ty</Var> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#rest</Const> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#nil</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>ty</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;local">allTypes</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>y</Var> </args> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <declare> <Var>c</Var> </declare> <declare> <Var>u</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#hasKey</Const> <Var>u</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </formula> <formula> <Atom> <op> <Const type="&rif;local">sameKey</Const> </op> <args ordered="yes"> <Var>u</Var> <Var>x</Var> <Var>y</Var> </args> </Atom> </formula> </And> </if> <then> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#sameAs</Const> <Var>y</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#first</Const> <Var>key</Var> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#rest</Const> <Var>tl</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>key</Var> <Var>v</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Var>key</Var> <Var>v</Var> </slot> </Frame> </formula> <formula> <Atom> <op> <Const type="&rif;local">sameKey</Const> </op> <args ordered="yes"> <Var>tl</Var> <Var>x</Var> <Var>y</Var> </args> </Atom> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;local">sameKey</Const> </op> <args ordered="yes"> <Var>u</Var> <Var>x</Var> <Var>y</Var> </args> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>u</Var> </declare> <declare> <Var>x</Var> </declare> <declare> <Var>y</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>u</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#first</Const> <Var>key</Var> </slot> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#rest</Const> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#nil</Const> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>x</Var> </object> <slot ordered="yes"> <Var>key</Var> <Var>v</Var> </slot> </Frame> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Var>key</Var> <Var>v</Var> </slot> </Frame> </formula> </And> </if> <then> <Atom> <op> <Const type="&rif;local">sameKey</Const> </op> <args ordered="yes"> <Var>u</Var> <Var>x</Var> <Var>y</Var> </args> </Atom> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>y</Var> </declare> <declare> <Var>c</Var> </declare> <declare> <Var>l</Var> </declare> <declare> <Var>ci</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#unionOf</Const> <Var>l</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>ci</Var> </args> </Atom> </content> </External> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>ci</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>yi</Var> </declare> <declare> <Var>c</Var> </declare> <declare> <Var>l</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#oneOf</Const> <Var>l</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>yi</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>yi</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>y</Var> </declare> <declare> <Var>c</Var> </declare> <declare> <Var>ci</Var> </declare> <declare> <Var>l</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#intersectionOf</Const> <Var>l</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>ci</Var> </args> </Atom> </content> </External> </formula> <formula> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>c</Var> </slot> </Frame> </formula> </And> </if> <then> <Frame> <object> <Var>y</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</Const> <Var>ci</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c</Var> </declare> <declare> <Var>ci</Var> </declare> <declare> <Var>l</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#intersectionOf</Const> <Var>l</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>ci</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>ci</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> <sentence> <Forall> <declare> <Var>c</Var> </declare> <declare> <Var>ci</Var> </declare> <declare> <Var>l</Var> </declare> <formula> <Implies> <if> <And> <formula> <Frame> <object> <Var>c</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2002/07/owl#unionOf</Const> <Var>l</Var> </slot> </Frame> </formula> <formula> <External> <content> <Atom> <op> <Const type="&rif;iri">http://www.w3.org/2007/rif-builtin-predicate#list-contains</Const> </op> <args ordered="yes"> <Var>l</Var> <Var>ci</Var> </args> </Atom> </content> </External> </formula> </And> </if> <then> <Frame> <object> <Var>ci</Var> </object> <slot ordered="yes"> <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subClassOf</Const> <Var>c</Var> </slot> </Frame> </then> </Implies> </formula> </Forall> </sentence> </Group> </payload></Document> Appendix: Change Log Changes first Note publication http://www.w3.org/TR/2010/NOTE-rif-owl-rl-20100622/ Corrected reference pred:literal-not-identical Corrected template rules appendix prp-adp, cax-adc, prp-spo2, prp-key, scm-int, cls-maxqc2, eq-diff2 eq-diff3. Many thanks Hendrick Marx identifying problems. Changes first Working Draft 1st October Fixed errors rules eq-diff2, prp-adp, cax-adc; added missing rule eq-diff3. Other small syntactic fixes prp-key. Updated corrected list datatypes. Updated use RIF List operators handling RDF lists. Fixed syntax errors rule names angle brackets relative URIs) Fixed use Forall empty variable list 