Representing Specified Values OWL: partitions" Representing Specified Values OWL: partitions" W3C Working Group Note May version: http://www.w3.org/TR/2005/NOTE-swbp-specified-values-20050517 Latest version: http://www.w3.org/TR/swbp-specified-values Previous version: http://www.w3.org/TR/2004/WD-swbp-specified-values-20040803 Editors: Alan Rector,University Manchester Copyright© W3C® ERCIM,Keio), Rights Reserved. W3C liability,trademark,documentuse rules apply. Abstract Modelling various descriptive known variously frequent requirementwhen creating ontologies. example: describe persons orother physical objects be constrained take values rank describe military officers restrictedto specific list values depending militaryorganisation. OWL such descriptive features are modelled asproperties range constraints values theproperty take document methods torepresent such features specified values: partitions ofclasses; enumerations individuals. notdiscuss use datatypes represent lists values. Status Document section status document time publication. Other documents supersede document. list current W3C publications latest revision technical report be found W3C technical reports index http://www.w3.org/TR/. document Working Group Note, produced Ontology Engineering Patterns Task Force Semantic Web Best Practices Deployment Working Group, part W3C Semantic Web Activity. document series documents produced task force. Comments document be sent public-swbp-wg@w3.org, mailing list public archive. Publication Working Group Note not imply endorsement W3C Membership. draft document be updated, replaced obsoleted other documents time. inappropriate cite document other work progress. General issue common requirement developing ontologies be able torepresent notions such man", ranking officer" person." are many such known almost suchcases necessary specify constraints values e.g. size be person be health", health" somecircumstanceswe also want represent modified values e.g."very large", large", etc. otherwise furthersubdivide original values. Inothercircumstances useful be able have different collectionsofvalues covering same feature, example have differentcollectionsof color values partitioning same space" break status" rather levels. are least different ways represent such specifiedcollections values: individuals enumeration makes up parent classrepresenting feature; pattern disjoint classes exhaustively partition parent classrepresenting feature. pattern datatypes. Data types more usually be used there isa literal, numeric derived data types rather there anenumerated list values. not be considered further inthisnote technical discussions are still continuing other W3ccommittees. supplement be issued later issuesare resolved.) Use case examples want describe persons having qualities such having sizethat small, medium large, bodytypethat slender, medium, obese having health status isgoodhealth, medium health, poor health. not be possible tohave morethan value qualities, e.g. beinconsistent be slender obese goodhealthand poor health. use feature examples. Theothersfollow analogously. Conventions used note Diagramming diagramming conventions used document are summarisedbelow. Examples are given appendix. Ellipses represent classes. Squares represent instances. Arrows: Closedundecorated arrows upwards possible) represent rdfs:subclassOf; Open undecorated arrows indicate rdf:type; arrows decorated blob originindicaterestrictions classes facts individuals. Dotted arrows indicate information represented inferrable reasoner not presentexplicitly code given. Upwardfacing square union symbols spanning set rdfs:subclassOfarrowsor rdf:type arrowsindicate subclasses individualsexhaust class i.e. cover possibilities. Thisis expressed OWL using owl:unionOf classes owl:oneOf individuals Downwards facing bracesare used indicate pairwise disjointness subclasses owl:allDifferent individuals. siblingclasses are disjoint individuals type are different inthese examples.) Syntax code keeping SWBP policy, syntax body note isN3. Details alternative syntaxes are given links. Vocabulary classis partitioned group subclasses subclasses aremutually exclusive, i.e. pairwise disjoint; b) subclassescompletely cover parent class, i.e. union thesubclasses equal parent class. characteristicof entity. Other words feature include Guarino], Forpurposes note distinction be made theseterms. further information representing more complex"qualities" see note N-ary Relations.) space" rangeof values feature take conceived continuous rangeor Also called quality space, see Guarino]. Representation patterns patterns are introduced. first simple intuitivebut limitations. second more complex moreflexible. classifiers also work more reliably Pattern 2than Pattern Pattern Values sets individuals approach, class Health_Value consideredas theenumeration individuals good_health,medium_health, poor_health. Values aresets ofindividuals. say good health", say value good_health health_status"This value justaunique symbol, value set just set such symbols.Normally, thevalues need be asserted be different other. InOWL, individuals represent same thing there isanaxiom say, explicitly, are different. other words, OWLdoesnot make Names Assumption". did not include thedifferentFrom axiom example, then bepossible good_health poor_health same thing, so be possible tohave person was good health poor healthsimultaneously. approach shown diagrammatically Figure Figure class-instance diagram use enumeratedinstances represent lists values Representation Pattern value set make equal tothe enumeration individual values}} owl:Class owl:equivalentClass owl:Class individuals}} owl:oneOf line make values different. Otherwise be inferred same}} owl:differentFrom individual values individual type Health_value}} owl:differentFrom owl:differentFrom owl:ObjectProperty owl:FunctionalProperty rdfs:range individual John state health_status good_health}}:John class Healthy_Person class Person health_status good_health}} i.e. individual type value(good_health)):Healthy_person owl:Class owl:equivalentClass owl:Class owl:intersectionOf owl:Restriction owl:hasValue owl:onProperty Considerations using Pattern straight forward match usage databases andmany frame systems assumptions conventions aboutanonymous individuals. Many people find more intuitive approach. possibility further subpartitioning values.This OWL supports only equality difference betweenindividuals. not allow individuals have partial Itis not possible, classes, say individual isequivalent union other individuals. way represent alternative partitionings feature space. individuals overlap, Health_Valueis defined equivalent enumeration list distinct values,it also be equivalent different list distinct values. Todo so cause reasoner indicate contradiction. Health_Valuewas representation OWL-DL, DL reasoners shouldeventually be expected make correct inferences individuals usedin way. However, FaCT Racer most widespreadopen source reasoners use today) perform expected inferencesreliably. OWL code example abbrev] syntax] Pattern Values subclasses partitioninga"feature" approach consider feature class representing acontinuous space partitioned values collection ofvalues. say good health" say healthisinside Good_health_values partition theHealth_value feature. Theoretically, there anindividualhealth value, Johns_health, know isthat itlies someplace Good_health_value partition. ThecassHealthy_Person class persons haveahealth Good_health_value partition. Figure class-instance diagram use ofpartitioningclasses collections values find alternative diagrammatic format adapted Venndiagrams shown Figure makes intention clearer showsthepartioning more explicitly. Figure adapted Venn diagram showing use ofpartitioningclasses represent lists values. Representation variants Pattern are variants presented: individual Johns_healthis explicitly represented, other implied anexistential restriction. Representation variant Using fact individual parent Value class bepartitioned}} owl:Class owl:equivalentClass owl:Class line makes partition exhaustive}} owl:unionOf subclasses make up partitioon make pairwise disjoint}} owl:Class rdfs:subClassOf disjoint axioms make subclasses partitioning}} owl:disjointWith owl:Class rdfs:subClassOf owl:disjointWith owl:Class rdfs:subClassOf owl:disjointWith functional propertyhas_health_status domain Person range Health_value}} property be functional}} owl:ObjectProperty owl:FunctionalProperty rdfs:domain optional be broader}} rdfs:range constrained be Health_value mandatory pattern}} class Person, itssubclassHealthy_person}} owl:Class. Healthy_person}} Healthy_person anything Person health status subclass Health_value}} owl:Class owl:equivalentClass owl:Class owl:intersectionOf owl:Restriction owl:onProperty owl:someValuesFrom John individual type person state health status Johns_health}} individual Johns_health Good_health_value}} Representation using variant Placing existential restrictionon not actually necessary create individual, Johns_healthexplicitly. Instead, possible use anexistential restriction imply existence leave itanonymous. Figure shown preceding underscore showing box dotted lines. Figure Pattern variant anonymous individual John'sHealth understand done formally, remember restrictions OWL are formally just type class, so adda restriction individual, make individual type therestriction. So John not only type Person,but also type restriction(has_health_status someValuesFrom(GoodHealthStatus N3 syntax: John individual type person type someValuesFrom Good_health_status}} owl:Restriction; owl:onProperty owl:someValuesFrom Considerations using Pattern result OWL-DL correctly using eitherFaCT Racer almost certainly other reasoner handlesany reasonable subset OWL-DL.The semantics faithfully represent thepartitioning continuous feature space collection ofdiscrete value. values be further subpartitioned, e.g. Good_health_valuemight be split Moderately_good_health_value Robust_good_health_value,simply subdividing Good_health_value partition. be several alternative partitionings samefeature space. variant be used part database schema orsimilar, then convention creating anonymous instances thedatabase required. call such anonymous instances practice, usually be ignored. commonconvention use class name string derived e.g. symbol database. fact strictly speaking, thesemantics require symbol be interpreted case adifferent anonymous instance class Good_health_valuewill be irrelevant most applications invisible users. problem only database bere-interpreted OWL, case variant variant mustbe chosen necessary anonymous variables restrictionsconstructed occurrence value database. use classes values unintuitive many peoplewho come database frame communities value sets areusually enumerated lists symbols. Code example Additional Considerations advise mixing Pattern Pattern ontology difficult authors remember whento use other. Maintaining consistentstyle almost always be preferred. note have maintained naming conventions thatclasses begin upper case letters included suffix subclasses make up value partitions. Creating group pairwise disjoint classes requirescombinatorially many disjoint axioms, i.e. axiom forevery pair pairwise disjoint classes. not happenwith individuals OWL standard allDifferentaxiom. Unfortunately not provide analogous alllDisjointaxiom.) Tools implement OWL literally encounter thisproblem OWL files implemented literally grow very large veryquickly. known work be covered asupplementary note being implemented tools. Acknowledgements code examples be viewable owl tools.Thefollowing information only thanks involved indeveloping tools. endorsement intended implied forthespecific tools. examples have been produced using Protege OWlplugin CO-ODE additional wizards OwlViz available http://protege.stanford.edu andfollowing plugins/backends/owl. files require CO-ODEpluginslinked page http://www.co-ode.org.Classificationinvolving individuals be shown form beentestedusing OilEd available http://oiled.man.ac.uk.In cases theRacer classifier been used, available http://www.sts.tu-harburg.de/~r.f.moeller/racer/. Special thanks Matthew Horridge help finaldrawings, Pat Hayes help draft diagrams, MikeUschold detailed reviews. References Rector, A., Modularisation Domain Ontologies Implemented inDescriptionLogics related formalisms including OWL. Knowledge Capture Island, FL, ACM, pdfhere Welty, C. Guarino, N. Supporting ontological analysis oftaxonomic relationships. Data Knowledge Engineering, pdfhere Appendix: Diagramming conventions Ellipses represent classes, e.g. Squares represent instances., e.g. John Arrows: Closedundecorated arrows upwards possible) represent rdfs:subclassOf; Open undecorated arrows indicate rdf:type; arrows decorated blob originindicaterestrictions classes facts individuals. Dotted arrows indicate information represented inferrable reasoner not presentexplicitly code given. Upwardfacing square union symbols spanning set rdfs:subclassOfarrowsor rdf:type arrowsindicate subclasses individualsexhaust class i.e. cover possibilities. Thisis expressed OWL using owl:unionOf classes owl:oneOf individuals Downwards facing bracesare used indicate pairwise disjointness subclasses owl:allDifferent individuals. siblingclasses are disjoint individuals type are different inthese examples.) 