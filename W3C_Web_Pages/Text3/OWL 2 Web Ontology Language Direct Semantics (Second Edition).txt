OWL Web Ontology Language Direct Semantics Edition) OWL Web Ontology Language Direct Semantics Edition) W3C Recommendation December version: http://www.w3.org/TR/2012/REC-owl2-direct-semantics-20121211/ Latest version http://www.w3.org/TR/owl2-direct-semantics/ Latest Recommendation: http://www.w3.org/TR/owl-direct-semantics Previous version: http://www.w3.org/TR/2012/PER-owl2-direct-semantics-20121018/ Editors: Boris Motik, University Oxford Peter F. Patel-Schneider, Nuance Communications Bernardo Cuenca Grau, University Oxford Contributors: alphabetical order) Ian Horrocks, University Oxford Bijan Parsia, University Manchester Uli Sattler, University Manchester refer errata document, include normative corrections. color-coded version document showing changes made previous version also available. document also available non-normative formats: PDF version. See also translations. Copyright W3C® ERCIM, Keio), Rights Reserved. W3C liability, trademark document use rules apply. Abstract OWL Web Ontology Language, informally OWL ontology language Semantic Web formally defined meaning. OWL ontologies provide classes, properties, individuals, data values are stored Semantic Web documents. OWL ontologies be used information written RDF, OWL ontologies are primarily exchanged RDF documents. OWL Document Overview overall state OWL be read other OWL documents. document direct model-theoretic semantics OWL compatible description logic SROIQ. Furthermore, document most common inference problems OWL Status Document May Be Superseded section status document time publication. Other documents supersede document. list current W3C publications latest revision technical report be found W3C technical reports index http://www.w3.org/TR/. Summary Changes have been substantive changes previous version. details minor changes see change log color-coded diff. Send Comments send comments public-owl-comments@w3.org archive). work document OWL Working Group complete, comments be addressed errata future revisions. Open discussion developers welcome public-owl-dev@w3.org archive). Endorsed W3C document been reviewed W3C Members, software developers, other W3C groups interested parties, endorsed Director W3C Recommendation. stable document be used reference material cited document. W3C's role making Recommendation draw attention specification promote widespread deployment. functionality interoperability Web. Patents document was produced group operating February W3C Patent Policy. W3C public list patent disclosures made connection deliverables group; page also instructions disclosing patent. Table Contents Introduction Direct Model-Theoretic Semantics OWL Vocabulary Interpretations Object Property Expressions Data Ranges Class Expressions Satisfaction Interpretation Class Expression Axioms Object Property Expression Axioms Data Property Expression Axioms Datatype Definitions Keys Assertions Ontologies Models Inference Problems Independence Direct Semantics Datatype Map OWL DL Appendix: Change Log Changes Recommendation Changes Proposed Recommendation Changes Candidate Recommendation Changes Last Call Acknowledgments References Normative References Nonnormative References Introduction document direct model-theoretic semantics OWL semantics given here strongly related semantics description logics Logics] semantics description logic SROIQ definition SROIQ not provide datatypes punning, semantics OWL defined directly constructs structural specification OWL Specification] instead reference SROIQ. constructs available SROIQ, semantics SROIQ trivially defined document. OWL DL ontology OWL ontology, document also direct semantics OWL Lite OWL DL ontologies; semantics equivalent direct model-theoretic semantics OWL Lite OWL DL Semantics Abstract Syntax]. Furthermore, document also direct model-theoretic semantics OWL profiles Profiles]. semantics defined OWL axioms ontologies, be understood instances structural specification Specification]. Parts structural specification are written document using functional-style syntax. OWL ontologies, anonymous individuals, axioms be annotated; furthermore, annotations contain additional annotations. types annotations, however, have semantic meaning OWL are ignored document. OWL declarations are used only disambiguate class expressions data ranges object property data property expressions functional-style syntax; therefore, are not mentioned explicitly document. Direct Model-Theoretic Semantics OWL section direct model-theoretic semantics OWL ontologies. Vocabulary datatype map, formalizing datatype maps OWL Specification Specification], 6-tuple D = NDT NLS NFS DT LS FS following components: NDT set datatypes precisely, names datatypes) not contain datatype rdfs:Literal. NLS function datatype DT NDT set NLS(DT) strings called lexical forms. set NLS(DT) called lexical space DT. NFS function datatype DT NDT set NFS(DT) pairs F F constraining facet arbitrary data value called constraining value. set NFS(DT) called facet space DT. datatype DT NDT, interpretation function DT DT set called value space DT. datatype DT NDT lexical form LV NLS(DT), interpretation function LS pair LV DT data value LV DT datatype DT NDT pair F NFS(DT), interpretation function FS F set F set datatypes NDT datatype map D not required contain datatypes OWL datatype map; talk subsets OWL datatype map, be necessary various profiles OWL however, D datatype DT OWL datatype map, then NLS(DT), NFS(DT), LV DT LV NLS(DT), F F NFS(DT) are required coincide definitions DT OWL datatype map. vocabulary V = VC VOP VDP VI VDT VLT VFA datatype map D 7-tuple consisting following elements: VC set classes defined OWL Specification Specification], containing least classes owl:Thing owl:Nothing. VOP set object properties defined OWL Specification Specification], containing least object properties owl:topObjectProperty owl:bottomObjectProperty. VDP set data properties defined OWL Specification Specification], containing least data properties owl:topDataProperty owl:bottomDataProperty. VI set individuals anonymous) defined OWL Specification Specification]. VDT set containing datatypes D, datatype rdfs:Literal, possibly other datatypes; NDT rdfs:Literal VDT. VLT set literals LV^^DT datatype DT NDT lexical form LV NLS(DT). VFA set pairs F lt constraining facet F, datatype DT NDT, literal lt VLT such F LV DT1 NFS(DT), LV lexical form lt DT1 datatype Given vocabulary V, following conventions are used document denote different syntactic parts OWL ontologies: OP object property; OPE object property expression; DP data property; DPE data property expression; C class; CE class expression; DT datatype; DR data range; individual anonymous); lt literal; F constraining facet. Interpretations Given datatype map D vocabulary V D, interpretation = ?I ?D C OP DP DT LT FA NAMED D V 10-tuple following structure: ?I nonempty set called object domain. ?D nonempty set disjoint ?I called data domain such ?D datatype DT VDT. C class interpretation function class C VC subset ?I such = ?I = ?. OP object property interpretation function object property OP VOP subset ?I ?I such = ?I ?I = ?. DP data property interpretation function data property DP VDP subset ?I ?D such = ?I ?D = ?. individual interpretation function individual VI element ?I. DT datatype interpretation function datatype DT VDT subset ?D such DT same D datatype DT NDT, = ?D. LT literal interpretation function defined = LV DT lt VLT, LV lexical form lt DT datatype FA facet interpretation function defined F lt = F F lt VFA. NAMED subset ?I such NAMED named individual VI. following sections define extensions OP, DT, C object property expressions, data ranges, class expressions. Object Property Expressions object property interpretation function OP extended object property expressions shown Table Table Interpreting Object Property Expressions Object Property Expression Interpretation OP ObjectInverseOf( OP y y Data Ranges datatype interpretation function DT extended data ranges shown Table datatypes OWL are unary, so datatype DT interpreted unary relation ?D set ?D. OWL currently not define data ranges arity more however, allowing n-ary data ranges, syntax OWL allowing implementations introduce extensions such comparisons arithmetic. n-ary data range DR interpreted n-ary relation ?D set Table Interpreting Data Ranges Data Range Interpretation DT DataIntersectionOf( DR1 DRn DataUnionOf( DR1 DRn DataComplementOf( DR n arity DR DataOneOf( lt1 ltn DatatypeRestriction( DT F1 lt1 Fn ltn F1 lt1 Fn ltn Class Expressions class interpretation function C extended class expressions shown Table S set, number elements S. Table Interpreting Class Expressions Class Expression Interpretation C ObjectIntersectionOf( CE1 CEn ObjectUnionOf( CE1 CEn ObjectComplementOf( CE ?I ObjectOneOf( a1 ObjectSomeValuesFrom( OPE CE y x, y y ObjectAllValuesFrom( OPE CE y x, y y ObjectHasValue( OPE ObjectHasSelf( OPE ObjectMinCardinality( n OPE y y n ObjectMaxCardinality( n OPE y y n ObjectExactCardinality( n OPE y y = n ObjectMinCardinality( n OPE CE y y y n ObjectMaxCardinality( n OPE CE y y y n ObjectExactCardinality( n OPE CE y y y = n DataSomeValuesFrom( DPE1 DPEn DR y1, yn yk k n y1 yn DataAllValuesFrom( DPE1 DPEn DR y1, yn yk k n imply y1 yn DataHasValue( DPE lt DataMinCardinality( n DPE y y n DataMaxCardinality( n DPE y y n DataExactCardinality( n DPE y y = n DataMinCardinality( n DPE DR y y y n DataMaxCardinality( n DPE DR y y y n DataExactCardinality( n DPE DR y y y = n Satisfaction Interpretation axiom ontology satisfied interpretation = ?I ?D C OP DP DT LT FA NAMED appropriate condition following sections Class Expression Axioms Satisfaction OWL class expression axioms defined shown Table Table Satisfaction Class Expression Axioms Interpretation Axiom Condition SubClassOf( CE1 CE2 EquivalentClasses( CE1 CEn = j n k n DisjointClasses( CE1 CEn = j n k n such j k DisjointUnion( C CE1 CEn = = j n k n such j k Object Property Expression Axioms Satisfaction OWL object property expression axioms defined shown Table Table Satisfaction Object Property Expression Axioms Interpretation Axiom Condition SubObjectPropertyOf( OPE1 OPE2 SubObjectPropertyOf( ObjectPropertyChain( OPE1 OPEn OPE y0 yn y0 y1 yn-1 yn imply y0 yn EquivalentObjectProperties( OPE1 OPEn = j n k n DisjointObjectProperties( OPE1 OPEn = j n k n such j k ObjectPropertyDomain( OPE CE y y ObjectPropertyRange( OPE CE y y y InverseObjectProperties( OPE1 OPE2 = y y FunctionalObjectProperty( OPE y1 y2 y1 y2 imply y1 = y2 InverseFunctionalObjectProperty( OPE x1 x2 y x1 y x2 y imply x1 = x2 ReflexiveObjectProperty( OPE ?I IrreflexiveObjectProperty( OPE ?I SymmetricObjectProperty( OPE y y y AsymmetricObjectProperty( OPE y y y TransitiveObjectProperty( OPE y y y imply Data Property Expression Axioms Satisfaction OWL data property expression axioms defined shown Table Table Satisfaction Data Property Expression Axioms Interpretation Axiom Condition SubDataPropertyOf( DPE1 DPE2 EquivalentDataProperties( DPE1 DPEn = j n k n DisjointDataProperties( DPE1 DPEn = j n k n such j k DataPropertyDomain( DPE CE y y DataPropertyRange( DPE DR y y y FunctionalDataProperty( DPE y1 y2 y1 y2 imply y1 = y2 Datatype Definitions Satisfaction datatype definitions defined shown Table Table Satisfaction Datatype Definitions Interpretation Axiom Condition DatatypeDefinition( DT DR = Keys Satisfaction keys defined shown Table Table Satisfaction Keys Interpretation Axiom Condition HasKey( CE OPE1 OPEm DPE1 DPEn y z1 zm w1 wn NAMED y y NAMED zi y zi zi NAMED m wj y wj j n then = y Assertions Satisfaction OWL assertions defined shown Table Table Satisfaction Assertions Interpretation Axiom Condition SameIndividual( a1 = j n k n DifferentIndividuals( a1 j n k n such j k ClassAssertion( CE ObjectPropertyAssertion( OPE a1 a2 NegativeObjectPropertyAssertion( OPE a1 a2 DataPropertyAssertion( DPE lt NegativeDataPropertyAssertion( DPE lt Ontologies OWL ontology O satisfied interpretation axioms axiom closure O anonymous individuals standardized apart described Section OWL Specification Specification]) are satisfied I. Models Given datatype map D, interpretation = ?I ?D C OP DP DT LT FA NAMED D model OWL ontology O w.r.t. D interpretation J = ?I ?D C OP DP J DT LT FA NAMED D such J named individuals J satisfies O. Thus, interpretation satisfying O also model O. contrast, model O not satisfy O directly; however, modifying interpretation anonymous individuals, always be coerced interpretation J satisfies O. Inference Problems Let D be datatype map V vocabulary D. Furthermore, let O O1 be OWL ontologies, CE, CE1, CE2 class expressions, named individual, such refer only vocabulary elements V. Furthermore, variables are symbols are not contained V. Finally, Boolean conjunctive query Q closed formula form x1 xn y1 ym A1 Ak Ai atom form C(s), OP(s,t), DP(s,u) C class, OP object property, DP data property, s t individuals variable xj, u literal variable yj. following inference problems are often considered practice. Ontology Consistency: O consistent satisfiable) w.r.t. D model O w.r.t. D V Ontology Entailment: O O1 w.r.t. D model O w.r.t. D V also model O1 w.r.t. D V. Ontology Equivalence: O O1 are equivalent w.r.t. D O O1 w.r.t. D O1 O w.r.t. D. Ontology Equisatisfiability: O O1 are equisatisfiable w.r.t. D O satisfiable w.r.t. D only O1 satisfiable w.r.t D. Class Expression Satisfiability: CE satisfiable w.r.t. O D model = ?I ?D C OP DP DT LT FA NAMED O w.r.t. D V such ?. Class Expression Subsumption: CE1 subsumed class expression CE2 w.r.t. O D model = ?I ?D C OP DP DT LT FA NAMED O w.r.t. D V. Instance Checking: instance CE w.r.t. O D model = ?I ?D C OP DP DT LT FA NAMED O w.r.t. D V. Boolean Conjunctive Query Answering: Q answer w.r.t. O D Q true model O w.r.t. D V according standard definitions first-order logic. order ensure ontology entailment, class expression satisfiability, class expression subsumption, instance checking are decidable, following restriction w.r.t. O needs be satisfied: class expression type MinObjectCardinality, MaxObjectCardinality, ExactObjectCardinality, ObjectHasSelf O1, CE, CE1, CE2 contain only object property expressions are simple axiom closure Ax O. ontology equivalence be decidable, O1 needs satisfy restriction w.r.t. O vice versa. restrictions are analogous first condition Section OWL Specification Specification]. Independence Direct Semantics Datatype Map OWL DL OWL DL been defined so consequences OWL DL ontology O do not depend choice datatype map, long datatype map chosen datatypes occurring O. statement made precise following theorem, several useful consequences: apply direct semantics OWL DL ontology O considering only datatypes explicitly occurring O. referring various reasoning problems, datatype map D need not be given explicitly, sufficient consider implicit datatype map containing only datatypes given ontology. OWL DL reasoners provide datatypes not explicitly mentioned specification fear change meaning OWL DL ontologies not using datatypes. Theorem DS1. Let O1 be OWL DL ontologies vocabulary V D = NDT NLS NFS DT LS FS datatype map such datatype mentioned O1 rdfs:Literal, datatype defined respective ontology, NDT. Furthermore, let D' = NDT' NLS' NFS' DT LS FS be datatype map such NDT NDT', NLS(DT) = NLS'(DT), NFS(DT) = NFS'(DT) DT NDT, DT LS FS are extensions DT, LS, FS, respectively. Then, O1 w.r.t. D only O1 w.r.t. D'. Proof. loss generality, assume O1 be negation-normal form Logics]. Furthermore, datatype definitions O1 are acyclic, assume defined datatype been recursively replaced definition; thus, datatypes O1 are NDT rdfs:Literal claim equivalent following statement: interpretation w.r.t. D V such O1 not satisfied only interpretation w.r.t. D' V such O1 not satisfied direction trivial interpretation w.r.t. D' V also interpretation w.r.t. D V. direction, assume interpretation = ?I ?D C OP DP DT LT FA NAMED w.r.t. D V such O1 not satisfied I. Let = ?I ?D' C OP DP DT LT FA NAMED be interpretation such ?D' obtained extending ?D value space datatypes NDT' NDT, C C classes, DP DP data properties apart owl:topDataProperty. Clearly, DataComplementOf( DR DataComplementOf( DR data range DR datatype, datatype restriction, enumerated data range. owl:topDataProperty property occur O1 only tautologies. interpretation other data properties same so = class expression CE occurring O1 Therefore, O1 not satisfied QED Appendix: Change Log Changes Recommendation section changes document Recommendation October, publication XML Schema Definition Language Part Datatypes Recommendation April elements OWL are based XSD are now considered required, note detailing optional dependency XSD Candidate Recommendation April, been removed Document" section. bug specification semantics keys Section was fixed replacing ISNAMED function defined Section extension interpretations defined Section include set NAMED elements interpreting named individuals. Minor typographical errors were corrected detailed OWL Errata page. Changes Proposed Recommendation changes have been made document Proposed Recommendation September, Changes Candidate Recommendation section changes document Candidate Recommendation June, editorial comment was added clarify role played OWL datatype map. Changes Last Call section changes document Last Call Working Draft April, minor editorial changes were made. Acknowledgments starting point development OWL was OWL1.1 member submission, result user developer feedback, particular information gathered OWL Experiences Directions Workshop series. working group also considered postponed issues WebOnt Working Group. document been produced OWL Working Group contents reflect extensive discussions Working Group whole.The editors extend special thanks toMarkus Krötzsch Schneider andThomas Schneider Manchester)for thorough reviews. regular attendees meetings OWL Working Group time publication document were:Jie Bao Calvanese University Bozen-Bolzano),Bernardo Cuenca Grau University Computing Laboratory),Martin Dzbor University),Achille Fokoue Corporation),Christine Golbreich Versailles St-Quentin LIRMM),Sandro Hawke Herman Hoekstra Amsterdam),Ian Horrocks University Computing Laboratory),Elisa Kendall Software),Markus Krötzsch Lutz Bremen),Deborah L. McGuinness Motik University Computing Laboratory),Jeff Pan Aberdeen),Bijan Parsia Manchester),Peter F. Patel-Schneider Labs Research, Alcatel-Lucent),Sebastian Rudolph Ruttenberg Commons),Uli Sattler Manchester),Michael Schneider Smith Parsia),Evan Wallace Wu Corporation), andAntoine Zimmermann Galway).We also thank members working group:Jeremy Carroll,Jim Hendler, andVipul Kashyap. References Normative References Specification] OWL Web Ontology Language: Structural Specification Functional-Style Syntax Edition) Boris Motik, Peter F. Patel-Schneider, Bijan Parsia, eds. W3C Recommendation, December http://www.w3.org/TR/2012/REC-owl2-syntax-20121211/. Latest version available http://www.w3.org/TR/owl2-syntax/. Nonnormative References Logics] Description Logic Handbook: Theory, Implementation, Applications, second edition. Franz Baader, Diego Calvanese, Deborah L. McGuinness, Daniele Nardi, Peter F. Patel-Schneider, eds. Cambridge University Press, Also see Description Logics Home Page. Semantics Abstract Syntax] OWL Web Ontology Language: Semantics Abstract Syntax. Peter F. Patel-Schneider, Patrick Hayes, Ian Horrocks, eds. W3C Recommendation, February http://www.w3.org/TR/2004/REC-owl-semantics-20040210/. Latest version available http://www.w3.org/TR/owl-semantics/. Profiles] OWL Web Ontology Language: Profiles Edition) Boris Motik, Bernardo Cuenca Grau, Ian Horrocks, Zhe Wu, Achille Fokoue, Carsten Lutz, eds. W3C Recommendation, December http://www.w3.org/TR/2012/REC-owl2-profiles-20121211/. Latest version available http://www.w3.org/TR/owl2-profiles/. Even More Irresistible SROIQ. Ian Horrocks, Oliver Kutz, Uli Sattler. Proc. 10th Int. Conf. Principles Knowledge Representation Reasoning AAAI Press, 