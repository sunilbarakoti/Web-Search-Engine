OWL Web Ontology Language Overview OWL Web Ontology Language Overview W3C Recommendation February New Version Available: OWL Status Update, November OWL Working Group produced W3C Recommendation new version OWL features version, remaining compatible. see OWL Document Overview introduction OWL guide OWL document set. version: http://www.w3.org/TR/2004/REC-owl-features-20040210/ Latest version: http://www.w3.org/TR/owl-features/ Previous version: http://www.w3.org/TR/2003/PR-owl-features-20031215/ Editors: Deborah L. McGuinness Systems Laboratory, Stanford University) Frank van Harmelen Universiteit, Amsterdam) Frank.van.Harmelen@cs.vu.nl refer erratafor document, include normative corrections. See also translations. Copyright W3C® ERCIM, Keio), Rights Reserved. W3C liability, trademark, document use software licensing rules apply. Abstract OWL Web Ontology Language designed use applications need process content information instead just presenting information humans. OWL facilitates greater machine interpretability Web content supported XML, RDF, RDF Schema providing additional vocabulary formal semantics. OWL increasingly-expressive sublanguages: OWL Lite, OWL DL, OWL Full. document written readers want first impression capabilities OWL. introduction OWL informally describing features sublanguages OWL. knowledge RDF Schema useful understanding document, not essential. document, interested readers turn OWL Guide more detailed descriptions extensive examples features OWL. normative formal definition OWL be found OWL Semantics Abstract Syntax. Status document document been reviewed W3C Members other interestedparties, been endorsed Director W3CRecommendation. W3C's role making Recommendation todraw attention specification promote widespreaddeployment. functionality interoperability ofthe Web. sixparts W3C Recommendation OWL, Web OntologyLanguage. been developed Web Ontology WorkingGroup part W3CSemantic Web Activity Statement, Group Charter) forpublication February design OWL expressed earlier versions documentshas been widely reviewed satisfies Working Group's technical requirements.The Working Group addressed comments received, making changes necessary. Changes tothis document ProposedRecommendation version are detailed change log. Comments are welcome public-webont-comments@w3.org(archive)and general discussion related technology welcome www-rdf-logic@w3.org list implementations available. W3C list anypatent disclosures related work. section status document time publication. Other documents supersede document. list current W3C publications latest revision technical report be found W3C technical reports index http://www.w3.org/TR/. Table contents Introduction Document Roadmap OWL? sublanguages OWL structure document Language Synopsis OWL Lite Synopsis OWL DL OWL Full Synopsis Language Description OWL Lite OWL Lite RDF Schema Features OWL Lite Equality Inequality OWL Lite Property Characteristics OWL Lite Property Restrictions OWL Lite Restricted Cardinality OWL Lite Class Intersection OWL Datatypes OWL Lite Header Information OWL Lite Annotation Properties OWL Lite Versioning Incremental Language Description OWL DL OWL Full Summary References Acknowledgements Change Log Introduction document OWL Web Ontology Language. OWL intended be used information contained documents needs be processed applications, opposed situations content only needs be presented humans. OWL be used explicitly represent meaning terms vocabularies relationships terms. representation terms interrelationships called ontology. OWL more facilities expressing meaning semantics XML, RDF, RDF-S, thus OWL languages ability represent machine interpretable content Web. OWL revision DAML+OIL web ontology language incorporating lessons learned design application DAML+OIL. Document Roadmap OWL Language described set documents, fulfilling different purpose, catering different audience. following brief roadmap navigating set documents: OWL Overview simple introduction OWL providing language feature listing very brief feature descriptions; OWL Guide use OWL language providing extended example. also glossary terminology used documents; OWL Reference systematic compact still informally stated) description modelling primitives OWL; OWL Semantics Abstract Syntax document final formally stated normative definition language; OWL Web Ontology Language Test Cases document large set test cases language; OWL Use Cases Requirements document set use cases web ontology language set requirements OWL. suggested reading order first documents given have been listed increasing degree technical content. last documents complete documentation set. OWL? Semantic Web vision future Web information given explicit meaning, making easier machines automatically process integrate information available Web. Semantic Web build XML's ability define customized tagging schemes RDF's flexible approach representing data. first level RDF required Semantic Web ontology language formally describe meaning terminology used Web documents. machines are expected perform useful reasoning tasks documents, language go basic semantics RDF Schema. OWL Use Cases Requirements Document more details ontologies, need Web Ontology Language terms use cases, design goals, requirements objectives OWL. OWL been designed meet need Web Ontology Language. OWL part growing stack W3C recommendations related Semantic Web. XML surface syntax structured documents, semantic constraints meaning documents. XML Schema language restricting structure XML documents also XML datatypes. RDF datamodel objects relations simple semantics datamodel, datamodels be represented XML syntax. RDF Schema vocabulary describing properties classes RDF resources, semantics generalization-hierarchies such properties classes. OWL more vocabulary describing properties classes: others, relations classes disjointness), cardinality equality, richer typing properties, characteristics properties symmetry), enumerated classes. sublanguages OWL OWL increasingly expressive sublanguages designed use specific communities implementers users. OWL Lite supports users primarily needing classification hierarchy simple constraints. example, supports cardinality constraints, only permits cardinality values be simpler provide tool support OWL Lite more expressive relatives, OWL Lite quick migration path other taxonomies. Owl Lite also lower formal complexity OWL DL, see section OWL Lite OWL Reference further details. OWL DL supports users want maximum expressiveness retaining computational completeness conclusions are guaranteed be computable) decidability computations finish finite time). OWL DL OWL language constructs, be used only certain restrictions example, class be subclass many classes, class be instance class). OWL DL so named due correspondence description logics, field research studied logics form formal foundation OWL. OWL Full meant users want maximum expressiveness syntactic freedom RDF computational guarantees. example, OWL Full class be treated simultaneously collection individuals individual own right. OWL Full ontology augment meaning pre-defined OWL) vocabulary. unlikely reasoning software be able support complete reasoning feature OWL Full. sublanguages extension simpler predecessor, be legally expressed be validly concluded. following set relations hold. inverses do not. legal OWL Lite ontology legal OWL DL ontology. legal OWL DL ontology legal OWL Full ontology. valid OWL Lite conclusion valid OWL DL conclusion. valid OWL DL conclusion valid OWL Full conclusion. Ontology developers adopting OWL consider sublanguage best suits needs. choice OWL Lite OWL DL extent users require more-expressive constructs provided OWL DL. choice OWL DL OWL Full mainly extent users require meta-modeling facilities RDF Schema defining classes classes, attaching properties classes). using OWL Full compared OWL DL, reasoning support less predictable complete OWL Full implementations do not currently exist. OWL Full be viewed extension RDF, OWL Lite OWL DL be viewed extensions restricted view RDF. OWL DL, Full) document RDF document, RDF document OWL Full document, only RDF documents be legal OWL Lite OWL DL document. care be taken user migrate RDF document OWL. expressiveness OWL DL OWL Lite deemed appropriate, precautions have be taken ensure original RDF document complies additional constraints imposed OWL DL OWL Lite. others, URI used class name be explicitly asserted be type owl:Class similarly properties), individual be asserted belong least class only owl:Thing), URI's used classes, properties individuals be mutually disjoint. details other constraints OWL DL OWL Lite are explained appendix E OWL Reference. structure document document first features OWL Lite, followed description features are added OWL DL OWL Full DL OWL Full contain same features, OWL Full more liberal features be combined). Language Synopsis section quick index language features OWL Lite, OWL DL, OWL Full. document, italicized terms are terms OWL. Prefixes rdf: rdfs: are used terms are already present RDF RDF Schema. Otherwise terms are introduced OWL. Thus, term rdfs:subPropertyOf subPropertyOf already rdfs vocabulary rdfs namespace). Also, term Class more precisely stated owl:Class term introduced OWL. OWL Lite Synopsis list OWL Lite language constructs given RDF Schema Features: Class Nothing) rdfs:subClassOf rdf:Property rdfs:subPropertyOf rdfs:domain rdfs:range Individual equivalentClass equivalentProperty sameAs differentFrom AllDifferent distinctMembers Property Characteristics: ObjectProperty DatatypeProperty inverseOf TransitiveProperty SymmetricProperty FunctionalProperty InverseFunctionalProperty Property Restrictions: Restriction onProperty allValuesFrom someValuesFrom Restricted Cardinality: minCardinality maxCardinality cardinality Header Information: Ontology imports Class Intersection: intersectionOf Versioning: versionInfo priorVersion backwardCompatibleWith incompatibleWith DeprecatedClass DeprecatedProperty Annotation Properties: rdfs:label rdfs:comment rdfs:seeAlso rdfs:isDefinedBy AnnotationProperty OntologyProperty Datatypes xsd datatypes OWL DL Full Synopsis list OWL DL OWL Full language constructs are addition expand OWL Lite given Class Axioms: oneOf, dataRange disjointWith equivalentClass class expressions) rdfs:subClassOf class expressions) Boolean Combinations Class Expressions: unionOf complementOf intersectionOf Arbitrary Cardinality: minCardinality maxCardinality cardinality Filler Information: hasValue Language Description OWL Lite section informal description OWL Lite language features. do not discuss specific syntax features OWL Reference definitions). language feature hyperlinked appropriate place OWL Guide more examples guidance usage. OWL Lite uses only OWL language features more limitations use features OWL DL OWL Full. example, OWL Lite classes only be defined terms named superclasses be arbitrary expressions), only certain kinds class restrictions be used. Equivalence classes subclass relationships classes are also only allowed named classes, not arbitrary class expressions. Similarly, restrictions OWL Lite use only named classes. OWL Lite also limited notion cardinality only cardinalities allowed be explicitly stated are OWL Lite RDF Schema Features following OWL Lite features related RDF Schema are included. Class: class group individuals belong together share properties. example, Deborah Frank are members class Person. Classes be organized specialization hierarchy using subClassOf. built-in most general class named Thing class individuals superclass OWL classes. also built-in most specific class named Nothing class instances subclass OWL classes. rdfs:subClassOf: Class hierarchies be created making more statements class subclass class. example, class Person be stated be subclass class Mammal. reasoner deduce individual Person, then also Mammal. rdf:Property: Properties be used state relationships individuals individuals data values. Examples properties include hasChild, hasRelative, hasSibling, hasAge. first be used relate instance class Person instance class Person are thus occurences ObjectProperty), last be used relate instance class Person instance datatype Integer thus occurence DatatypeProperty). owl:ObjectProperty owl:DatatypeProperty are subclasses RDF class rdf:Property. rdfs:subPropertyOf: Property hierarchies be created making more statements property subproperty more other properties. example, hasSibling be stated be subproperty hasRelative. reasoner deduce individual related hasSibling property, then also related other hasRelative property. rdfs:domain: domain property limits individuals property be applied. property individual individual, property class domains, then individual belong class. example, property hasChild be stated have domain Mammal. reasoner deduce Frank hasChild Anna, then Frank be Mammal. Note rdfs:domain called global restriction restriction stated property not just property associated particular class. See discussion property restrictions more information. rdfs:range: range property limits individuals property have value. property individual individual, property class range, then other individual belong range class. example, property hasChild be stated have range Mammal. reasoner deduce Louise related Deborah hasChild property, Deborah child Louise), then Deborah Mammal. Range also global restriction domain Again, see discussion local restrictions AllValuesFrom) more information. Individual Individuals are instances classes, properties be used relate individual example, individual named Deborah be described instance class Person property hasEmployer be used relate individual Deborah individual StanfordUniversity. OWL Lite Equality Inequality following OWL Lite features are related equality inequality. equivalentClass classes be stated be equivalent. Equivalent classes have same instances. Equality be used create synonymous classes. example, Car be stated be equivalentClass Automobile. reasoner deduce individual instance Car also instance Automobile vice versa. equivalentProperty: properties be stated be equivalent. Equivalent properties relate individual same set other individuals. Equality be used create synonymous properties. example, hasLeader be stated be equivalentProperty hasHead. reasoner deduce X related Y property hasLeader, X also related Y property hasHead vice versa. reasoner also deduce hasLeader subproperty hasHead hasHead subProperty hasLeader. sameAs: individuals be stated be same. constructs be used create number different names refer same individual. example, individual Deborah be stated be same individual DeborahMcGuinness. differentFrom: individual be stated be different other individuals. example, individual Frank be stated be different individuals Deborah Jim. Thus, individuals Frank Deborah are values property stated be functional property most value), then there contradiction. Explicitly stating individuals are different be important using languages such OWL RDF) do not assume individuals have only name. example, additional information, reasoner not deduce Frank Deborah refer distinct individuals. AllDifferent: number individuals be stated be mutually distinct AllDifferent statement. example, Frank, Deborah, Jim be stated be mutually distinct using AllDifferent construct. differentFrom statement above, also enforce Jim Deborah are distinct just Frank distinct Deborah Frank distinct Jim). AllDifferent construct particularly useful there are sets distinct objects modelers are interested enforcing unique names assumption sets objects. used conjunction distinctMembers state members list are distinct pairwise disjoint. OWL Lite Property Characteristics are special identifiers OWL Lite are used provide information concerning properties values. distinction ObjectProperty DatatypeProperty mentioned property description. inverseOf: property be stated be inverse property. property P1 stated be inverse property P2, then X related Y P2 property, then Y related X P1 property. example, hasChild inverse hasParent Deborah hasParent Louise, then reasoner deduce Louise hasChild Deborah. TransitiveProperty: Properties be stated be transitive. property transitive, then pair instance transitive property P, pair instance P, then pair also instance P. example, ancestor stated be transitive, Sara ancestor Louise instance property ancestor) Louise ancestor Deborah instance property ancestor), then reasoner deduce Sara ancestor Deborah instance property ancestor). OWL Lite OWL DL) impose side condition transitive properties superproperties) have maxCardinality restriction. side-condition, OWL Lite OWL DL become undecidable languages. See property axiom section OWL Semantics Abstract Syntax document more information. SymmetricProperty: Properties be stated be symmetric. property symmetric, then pair instance symmetric property P, then pair also instance P. example, friend be stated be symmetric property. Then reasoner given Frank friend Deborah deduce Deborah friend Frank. FunctionalProperty Properties be stated have unique value. property FunctionalProperty, then more value individual have values individual). characteristic been referred having unique property. FunctionalProperty shorthand stating property's minimum cardinality maximum cardinality example, hasPrimaryEmployer be stated be FunctionalProperty. reasoner deduce individual have more primary employer. not imply Person have least primary employer however. InverseFunctionalProperty: Properties be stated be inverse functional. property inverse functional then inverse property functional. Thus inverse property most value individual. characteristic also been referred unambiguous property. example, hasUSSocialSecurityNumber unique identifier United States residents) be stated be inverse functional unambiguous). inverse property be referred isTheSocialSecurityNumberFor) most value individual class social security numbers. Thus person's social security number only value isTheSocialSecurityNumberFor property. reasoner deduce different individual instances Person have identical US Social Security Number. Also, reasoner deduce instances Person have same social security number, then instances refer same individual. OWL Lite Property Restrictions OWL Lite restrictions be placed properties be used instances class. type cardinality restrictions subsection) are used context owl:Restriction. owl:onProperty element restricted property. following restrictions limit values be used section's restrictions limit many values be used. allValuesFrom: restriction allValuesFrom stated property respect class. means property particular class local range restriction associated Thus instance class related property second individual, then second individual be inferred be instance local range restriction class. example, class Person have property called hasDaughter restricted have allValuesFrom class Woman. means individual person Louise related property hasDaughter individual Deborah, then reasoner deduce Deborah instance class Woman. restriction property hasDaughter be used other classes, such class Cat, have appropriate value restriction associated use property class. case, hasDaughter have local range restriction Cat associated class Cat have local range restriction Person associated class Person. Note reasoner not deduce allValuesFrom restriction alone there actually least value property. someValuesFrom: restriction someValuesFrom stated property respect class. particular class have restriction property least value property certain type. example, class SemanticWebPaper have someValuesFrom restriction hasKeyword property states value hasKeyword property be instance class SemanticWebTopic. option having multiple keywords long more instance class SemanticWebTopic, then paper be consistent someValuesFrom restriction. allValuesFrom, someValuesFrom not restrict values property be instances same class. myPaper instance SemanticWebPaper class, then myPaper related hasKeyword property least instance SemanticWebTopic class. Note reasoner not deduce allValuesFrom restrictions) values hasKeyword are instances SemanticWebTopic class OWL Lite Restricted Cardinality OWL Lite limited form cardinality restrictions. OWL OWL Lite) cardinality restrictions are referred local restrictions, are stated properties respect particular class. restrictions constrain cardinality property instances class. OWL Lite cardinality restrictions are limited only allow statements concerning cardinalities value do not allow arbitrary values cardinality, case OWL DL OWL Full). minCardinality: Cardinality stated property respect particular class. minCardinality stated property respect class, then instance class be related least individual property. restriction way saying property required have value instances class. example, class Person not have minimum cardinality restrictions stated hasOffspring property not persons have offspring. class Parent, however have minimum cardinality hasOffspring property. reasoner Louise Person, then nothing be deduced minimum cardinality hasOffspring property. Once discovered Louise instance Parent, then reasoner deduce Louise related least individual hasOffspring property. information alone, reasoner not deduce maximum number offspring individual instances class parent. OWL Lite only minimum cardinalities allowed are minimum cardinality property just states absence more specific information) property optional respect class. example, property hasOffspring have minimum cardinality class Person stated have more specific information minimum cardinality class Parent). maxCardinality: Cardinality stated property respect particular class. maxCardinality stated property respect class, then instance class be related most individual property. maxCardinality restriction sometimes called functional unique property. example, property hasRegisteredVotingState class UnitedStatesCitizens have maximum cardinality people are only allowed vote only state). reasoner deduce individual instances class USCitizens not be related more distinct individuals hasRegisteredVotingState property. maximum cardinality restriction alone, reasoner not deduce minimum cardinality be useful state certain classes have values particular property. example, instances class UnmarriedPerson not be related individuals property hasSpouse. situation represented maximum cardinality hasSpouse property class UnmarriedPerson. cardinality: Cardinality provided convenience useful state property class minCardinality maxCardinality minCardinality maxCardinality example, class Person exactly value property hasBirthMother. reasoner deduce distinct individual instances class Mother be values hasBirthMother property same person. Alternate namings restricted forms cardinality were discussed. Current recommendations are include such names front end system. More topic available publicly available webont mail archives most relevant message http://lists.w3.org/Archives/Public/www-webont-wg/2002Oct/0063.html. OWL Lite Class Intersection OWL Lite intersection constructor limits usage. intersectionOf: OWL Lite intersections named classes restrictions. example, class EmployedPerson be described intersectionOf Person EmployedThings be defined things have minimum cardinality hasEmployer property). reasoner deduce particular EmployedPerson least employer. OWL Datatypes OWL uses RDF mechanisms data values. See OWL Guide section datatypes more detailed description built-in OWL datatypes taken largely XML Schema datatypes. OWL Lite Header Information OWL Lite supports notions ontology inclusion relationships attaching information ontologies. See OWL Reference details OWL Guide examples. OWL Lite Annotation Properties OWL Lite annotations classes, properties, individuals ontology headers. use annotations subject certain restrictions. See section Annotations OWL Reference details. OWL Lite Versioning RDF already small vocabulary describing versioning information. OWL significantly vocabulary. See OWL Reference further details. Incremental Language Description OWL DL OWL Full OWL DL OWL Full use same vocabulary OWL DL subject restrictions. Roughly, OWL DL type separation class not also be individual property, property not also be individual class). restrictions be applied language elements OWL allowed OWL Full). Furthermore, OWL DL properties are ObjectProperties DatatypeProperties: DatatypeProperties are relations instances classes RDF literals XML Schema datatypes, ObjectProperties are relations instances classes. OWL Semantics Abstract Syntax document distinctions limitations. describe OWL DL OWL Full vocabulary constructions OWL Lite oneOf: classes): Classes be described enumeration individuals make up class. members class are exactly set enumerated individuals; more, less. example, class daysOfTheWeek be described simply enumerating individuals Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday. reasoner deduce maximum cardinality property daysOfTheWeek allValuesFrom restriction. hasValue: values): property be required have certain individual value sometimes referred property values). example, instances class dutchCitizens be characterized people have theNetherlands value nationality. nationality value, theNetherlands, instance class Nationalities). disjointWith: Classes be stated be disjoint other. example, Man Woman be stated be disjoint classes. disjointWith statement, reasoner deduce inconsistency individual stated be instance similarly reasoner deduce instance Man, then not instance Woman. unionOf, complementOf, intersectionOf combinations): OWL DL OWL Full allow arbitrary Boolean combinations classes restrictions: unionOf, complementOf, intersectionOf. example, using unionOf, state class things are USCitizens DutchCitizens. Using complementOf, state children are not SeniorCitizens. class Children subclass complement SeniorCitizens). Citizenship European Union be described union citizenship member states. minCardinality, maxCardinality, cardinality cardinality): OWL Lite, cardinalities are restricted least, most exactly full OWL cardinality statements arbitrary non-negative integers. example class DINKs Income, Kids") restrict cardinality property hasIncome minimum cardinality property hasChild have be restricted cardinality complex classes many constructs, OWL Lite syntax single class names subClassOf equivalentClass statements). OWL Full restriction allow arbitrarily complex class descriptions, consisting enumerated classes, property restrictions, Boolean combinations. Also, OWL Full classes be used instances OWL DL OWL Lite do not). more topic, see Use" section Guide document. Summary document overview Web Ontology Language providing brief introduction need Web ontology language OWL fits related W3C languages. also brief description OWL sublanguages: OWL Lite, OWL DL, OWL Full feature synopsis languages. document update Feature Synopsis Document. simple descriptions constructs simple examples. references OWL reference document, OWL Guide, OWL Semantics Abstract Syntax document more details. Previous versions December September August July May March January July July June May May document provide historical view evolution OWL Lite issues discussed evolution. References Guide] OWL Web Ontology Language Guide, Michael K. Smith, Chris Welty, Deborah L. McGuinness, Editors, W3C Recommendation, February http://www.w3.org/TR/2004/REC-owl-guide-20040210/ Latest version available http://www.w3.org/TR/owl-guide/ Reference] OWL Web Ontology Language Reference, Mike Dean Guus Schreiber, Editors, W3C Recommendation, February http://www.w3.org/TR/2004/REC-owl-ref-20040210/ Latest version available http://www.w3.org/TR/owl-ref/ Abstract Syntax Semantics] OWL Web Ontology Language Semantics Abstract Syntax, Peter F. Patel-Schneider, Pat Hayes, Ian Horrocks, Editors, W3C Recommendation, February http://www.w3.org/TR/2004/REC-owl-semantics-20040210/ Latest version available http://www.w3.org/TR/owl-semantics/ Test] OWL Web Ontology Language Test Cases, Jeremy J. Carroll Jos De Roo, Editors, W3C Recommendation, February http://www.w3.org/TR/2004/REC-owl-test-20040210/ Latest version available http://www.w3.org/TR/owl-test/ Requirements] OWL Web Ontology Language Use Cases Requirements, Jeff Heflin, Editor, W3C Recommendation, February http://www.w3.org/TR/2004/REC-webont-req-20040210/ Latest version available http://www.w3.org/TR/webont-req/ Issues] Web Ontology Issue Status. Michael K. Smith, ed. November Reference] DAML+OIL Reference Description Dan Connolly, Frank van Harmelen, Ian Horrocks, Deborah L. McGuinness, Peter F. Patel-Schneider, Lynn Andrea Stein. W3C Note December Extensible Markup Language Schema] XML Schema XML Schema Part Datatypes W3C Recommendation, World Wide Web Consortium, May Syntax] RDF/XML Syntax Specification Dave Beckett, Editor, W3C Recommendation, February http://www.w3.org/TR/2004/REC-rdf-syntax-grammar-20040210/ Latest version available http://www.w3.org/TR/rdf-syntax-grammar/ Concepts] Resource Description Framework Concepts Abstract Syntax, Graham Klyne Jeremy J. Carroll, Editors, W3C Recommendation, February http://www.w3.org/TR/2004/REC-rdf-concepts-20040210/ Latest version available http://www.w3.org/TR/rdf-concepts/ Schema] RDF Vocabulary Description Language RDF Schema, Dan Brickley R. V. Guha, Editors, W3C Recommendation, February http://www.w3.org/TR/2004/REC-rdf-schema-20040210/ Latest version available http://www.w3.org/TR/rdf-schema/ Semantics] RDF Semantics, Patrick Hayes, Editor, W3C Recommendation, February http://www.w3.org/TR/2004/REC-rdf-mt-20040210/ Latest version available http://www.w3.org/TR/rdf-mt/ Logics] Description Logic Handbook. Franz Baader, Diego Calvanese, Deborah McGuinness, Daniele Nardi, Peter Patel-Schneider, editors. Cambridge University Press, Description Logics Home Page. Acknowledgements document result extensive discussions Web Ontology Working Group whole. participants Working Group included: Yasser alSafadi, Jean-François Baget, James Barnette, Sean Bechhofer, Jonathan Borden, Frederik Brysse, Stephen Buswell, Jeremy Carroll, Dan Connolly, Peter Crowther, Jonathan Dale, Jos De Roo, David De Roure, Mike Dean, Larry Eshelman, Jérôme Euzenat, Tim Finin, Nicholas Gibbins, Sandro Hawke, Patrick Hayes, Jeff Heflin, Ziv Hellman, James Hendler, Bernard Horan, Masahiro Hori, Ian Horrocks, Jane Hunter, Francesco Iannuzzelli, Rüdiger Klein, Natasha Kravtsova, Ora Lassila, Massimo Marchiori, Deborah McGuinness, Enrico Motta, Leo Obrst, Mehrdad Omidvari, Martin Pike, Marwan Sabbouh, Guus Schreiber, Noboru Shimizu, Michael Sintek, Michael K. Smith, John Stanton, Lynn Andrea Stein, Herman ter Horst, David Trastour, Frank van Harmelen, Bernard Vatant, Raphael Volz, Evan Wallace, Christopher Welty, Charles White, John Yanosy. Change Log Last Call Release Added owl:Nothing OWL Lite. Added pointer last call document title Changed links owl-absyn owl-semantics Incorporated Lee Lacy's grammatical comments public-webont-comments dated April Incorporated Lee Lacy's other comments: annotation properties, version properties, other missing tags got reorganised result) changed hasOffSpring example hasDaughter Morten Frederiksen) incorporated Lasilla's comment, including replacing readability" interpretability" various typo's. Added sentence lower complexity class OWL Lite, proposed Jim Hendler Added first sentence section Sandro Hawke's comment Restored link style file Added link test document May version Added references section Changed back relative references sections Changed links http://www.w3.org/TR/xx previous versions updates later Change Log Candidate Recommendation Added Change Log candidate recommendation. Deleted Control Ms end lines. Incorporated Jeff Rafter's public webont comments. Updated Status, Document links, date publication, etc. according PR email chair. Change Log Proposed Recommendation broken links fixed W3C icon was referenced referring local W3c expansion src="OWL Web Ontology Language Overview_files/ was gif author. Added full expansion W3C icon email gif Removed control Ms end line introduced new version transfer. Added links previous version December Updated document taking Lee Lacy's comments dated January mostly small editorial changes, cell spacing change table, Included Benjamin Nowack's editorial comments. Updated Reference format. 