Best practices creating MMI Modality Components Best practices creating MMIModality Components W3C Working GroupNote March version: http://www.w3.org/TR/2011/NOTE-mmi-mcbp-20110301/ Latest version: http://www.w3.org/TR/mmi-mcbp/ Previous version: first version. Editor: Ingmar Kliche Deutsche Telekom AG Authors: Deborah Dahl, Invited Expert James A. Larson, Invited Expert B. Helena Rodriguez, Telecom ParisTech Muthuselvam Selvaraj, HP Copyright © W3C® ERCIM, Keio),All Rights Reserved. W3C liability, trademark documentuse rules apply. Abstract document Modality Components MMIArchitecture are responsible controlling variousinput output modalities various devices providingguidelines suggestions designing Modality Components. Alsothis document shows several possible examples ModalityComponents, face identification, form-filling usinghandwriting recognition video display. Status Document section status document thetime publication. Other documents supersede thisdocument. list current W3C publications latestrevision technical report be found W3C technical reports index athttp://www.w3.org/TR/. March W3CWorking Group Note practices creating MMI ModalityComponents". Multimodal Interaction Working Group oncepublished Working Draft Interfaces Architecture)" October2008 content. However, Working Group concluded description create Modality Components examplesof possible Modality Components be published WorkingGroup Note rather part MMI Architecture specification.The goal Working Group Note provide guidelines andsuggestions designing Modality Components MMIArchitecture make easier author concrete ModalityComponents multimodal Web applications. Also documentshows several possible examples Modality Components, faceidentification, form-filling using handwriting recognition video display. W3C Working Group Note been developed Multimodal Interaction WorkingGroup W3C MultimodalInteraction Activity. Comments note are welcomed have subjectstarting prefix send www-multimodal@w3.org, thepublic email list issues related Multimodal. list archivedand acceptance archiving policy requested automaticallyupon first post. subscribe list send email www-multimodal-request@w3.orgwith word subject line. more information Multimodal Interaction Activity,please see Multimodal InteractionActivity statement. document was produced group operating 5February W3C Patent Policy. W3C public listof patent disclosures made connection thedeliverables group; page also instructions fordisclosing patent. individual actual knowledge apatent individual Essential Claim(s) disclose information accordancewith section W3C Patent Policy. Publication Working Group Note not imply endorsementby W3C Membership. draft document be updated,replaced obsoleted other documents time. isinappropriate cite document other work inprogress. Table Contents Introduction Modality componentguidelines Guideline Eachmodality component implement MMI life-cycleevents. Guideline other functions modality component arerelevant interaction manager. Guideline Ifthe component uses media, specify media format. example,audio formats speech recognition, InkML handwritingrecognition. Guideline protocols use component InteractionManager SIP HTTP). Guideline supported human languages, e.g., English, German, Chineseand locale, relevant. Guideline supporting languages required component, ifany. Guideline components sending data interaction manager mustuse format appropriate. Guideline error codes meanings be returned theIM. Modalitycomponent design suggestions Designsuggestion Consider constructing complex modality componentwith multiple functions function errorsgenerated function. Designsuggestion Consider constructing complex modality componentwith multiple functions rather several simple modalitycomponents functions need be synchronized. Designsuggestion Consider constructing nested modality componentwith multiple child modality components children modalitycomponents are frequently used together do not handle thererrors generated other children components childrencomponents do not need be extensively synchronized. Examplesimple modality: Face Identification Functionsof Possible Face Identification Component EventSyntax Examples ofevents starting component Example output event Example simple modality: Form-filling using HandwritingRecognition Functionsof Possible Handwriting Recognition Component Event Syntax Examples events preparing component Examples events starting component Example outputevent Example simplemodality: Video Display Functionsof Possible Video Display Component Event Syntax Examplesof events starting component Appendix References 1Introduction W3C Multimodal Interaction Working Group anarchitecture MultimodalInteraction framework MultimodalArchitecture general flexible framework forinteroperability various components multimodalframework modality components interactionmanager abstract way. others definesinterfaces messages constituents framework,but up implementation decide messages aretransferred case distributed implementation. Note informative supplement MultimodalArchitecture Interfaces specification contrast MultimodalArchitecture specification, normative conformance formultimodal constituents, intention document toprovide additional informative guidelines authors MMImodality components. purpose assist authors maximizingthe usefulness Multimodal Architecture conformantconstituents describing additional information enableconstituents be more easily incorporated multimodalsystem. additional suggested information forexample, descriptions constituent respectto optional aspects Architecture. specific goals ofthe guidelines document are promote interoperability constituents differentvendors are used same system suggesting importantinformation be provided constituent willenable others use constituent effectively Modality componentguidelines provide suggestions authoring Modality Components orderto maximize effectiveness Modalitycomponent design suggestions provide illustrations suggestions using samplemodality components face identification handwritingrecognition Examplesimple modality: Face Identification Example simple modality: Form-filling using HandwritingRecognition Modality componentguidelines following guidelines guarantee modalities are portablefrom interaction manager interaction manager. Guideline Eachmodality component implement MMI life-cycleevents. MMI life-cycle events are mechanism amodality component interaction manager. TheModality Component author define modalitycomponent respond life-cycle event. modalitycomponent respond life-cycle event fromthe interaction manager cases response required,as defined MMI Architecture. example, modalitycomponent presents static display, respond event <pauseResponse> event even thestatic display modality component nothing else response tothe <pause> event. life-cycle event, define parameters syntax ofthe element corresponding life-cycle event thatwill be used performing function. example, event speech recognition modalitycomponent include parameters timeout, confidencethreshold, max n-best, grammar. Guideline other functions modality component arerelevant interaction manager. Define <extensionNotification> event communicatethese functions interaction manager. Guideline Ifthe component uses media, specify media format. example,audio formats speech recognition, InkML handwritingrecognition. Guideline protocols use component InteractionManager SIP HTTP). Guideline supported human languages, e.g., English, German, Chineseand locale, relevant. Guideline supporting languages required component, ifany. example: speech synthesis simplemodality component aspeech recognition simple modality component aspeech complex modality component Guideline components sending data interaction manager mustuse format appropriate. modality component captures information, format information using EMMA format use anextension event send information interactionmanager. Guideline error codes meanings be returned theIM. MC developer specify error codes are specificto component. MC based technology, thedeveloper provide reference technology specification.For instance, MC based VoiceXML, reference theVoiceXML spec VoiceXML errors be included instead oflisting VoiceXML error. Errors such XML errors MMI protocol errors behandled accordance guidelines laid MMIarchitecture. errors do not need be documented. Modality componentdesign suggestions following design suggestions be helpful modalitycomponent authors make modalities portable interactionmanager interaction manager. suggestion Consider constructing complex modalitycomponent multiple functions function theerrors generated function. example, ASR recognize user's utterance, be presented user asking user try again bythe TTS function. example, ASR recognizea user's utterance, GUI function display n-best list ona screen so user select desired word. Efficiencyconcerns indicate modality components be combined intoa single complex modality component. suggestion Consider constructing complex modalitycomponent multiple functions rather several simplemodality components functions need be synchronized. example, TTS function be synchronized visualtalking head so lip movements are synchronized thewords. example, TTS functions presents informationabout graphical item user places focus."Again, efficiency concerns indicate TTS talkinghead be modality components be combined single complexmodality component. suggestion Consider constructing nested modalitycomponent multiple child modality components childrenmodality components are frequently used together do not handlether errors generated other children components thechildren components do not need be extensivelysynchronized. Writing application using nested modality component beeasier writing same application using multiple modalitycomponents nested modality component hides much thecomplexity managing children modality components. Examplesimple modality: Face Identification Possible Face Identification Component Consider theoretical face identification modality componentthat image images face returns set ofpossible matches confidence face identificationsoftware match. API modality component wouldinclude events starting component, providing data, forreceiving results back component. particular example information needed runthis component events;that example events areused, extensionNotification events be part ofanother modality component's API. example animage already been acquired source; however, anotherpossibility be also include image acquisition theoperation component. Depending capabilities modality component, otherpossible information be included be usefulnon-functional information capturing context stillpicture indoor picture outdoor picture) type ofimage portrait photography street photography) orwould be technical information algorithm be used orthe image format expect. emphasize just anexample indicate kinds information be used bya multimodal application face recognition. actualinterface used real applications be defined experts inthe field. use case face identification component identifiesone set employees basis face images. MMI Runtime Framework use following events tocommunicate such component. Table Component behavior Face Identification withrespect modality component guidelines. Guideline Component Information Guideline modality component implement life cycle events. See Table details implementation thelife-cycle events. Guideline Identify other functions modality componentthat are relevant interaction manager. functions component are covered thelife-cycle events, other functions are needed. Guideline component uses media, specify mediaformat. component uses jpeg format images be identifiedand image database. Guideline Specify protocols supported component fortransmitting media SIP). component uses HTTP transmitting media. Guideline Specify supported human languages. component not support human languages. Guideline Specify supporting languages required thecomponent. component not require markup languages. Guideline Modality components sending data theinteraction manager use EMMA format. component uses EMMA. Table Component behavior face identification foreach life-cycle event. Life Cycle Event Component Implementation newContextRequest component requests new context theIM. newContextResponse component starts new context context id prepareRequest component resources be used identification,specifically, image database. prepareResponse database known users not found, theerror message users not found" returned element. startRequest component starts processing possible, using specifiedimage, image database, threshold, limit size nbestresults be returned. startResponse database known users not found, theerror message users not found" returned element. doneNotification Identification results EMMA format are reported field.The mode medium thefunction verbal cancelRequest component stops processing always hard stop not requests hard stop. cancelResponse pauseRequest component pause. pauseResponse <statusInfo> field pause". resumeRequest component resume. resumeResponse <statusInfo> field resume". extensionNotification component not use ignoresany events are sent theIM. clearContextRequest clearContextResponse statusRequest statusResponse component returns standard life cycle response. attribute component doesnot supply automatic updates. Note: means component not doanything actions specified MMIArchitecture. EventSyntax events starting component start component, startRequest event IM identification component sent, asking start anidentification. images found certain URI areto be identified comparing known set employeesfound URI. confidence threshold component isset .5 IM requests maximum possiblematches. <mmi xmlns="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:startRequest source="uri:RTFURI" context="URI-1" requestID="request-1"> <mmi:data> <face-identification-parameters threshold=".5" unknown="someURI" known="uri:employees" max-nbest="5"/> </mmi:data> </mmi:startRequest></mmi:mmi> part support life-cycle events, modalitycomponent required respond startRequest event astartResponse event. Here's example startResponse identification component IM informing IM identification component successfully started. <mmi xmlns="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:startResponse source="uri:faceURI" context="URI-1" requestID="request-1" status="success"/> </mmi:mmi> Here's example startResponse event faceidentification component IM case failure, anexample failure message. case failure message indicatesthat known images be found. <mmi xmlns="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:startResponse source="uri:faceURI" context="URI-1" requestID="request-1" status="failure"> <mmi:statusInfo> known users not found </mmi:statusInfo> </mmi:startResponse></mmi:mmi> Example output event Here's example output event, sent faceidentification component IM, using EMMA represent theidentification results. results different confidences arereturned. <mmi xmlns="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:doneNotification source="uri:faceURI" context="URI-1" status="success" requestID="request-1"> <mmi:data> <emma:emma version="1.0" xmlns:emma="http://www.w3.org/2003/04/emma"> <emma:one-of emma:medium="visual" emma:verbal="false" emma:mode="photograph" emma:function="identification"> <emma:interpretation id="int1" emma:confidence=".75"> <person>12345</person> <name>Mary Smith</name> </emma:interpretation> <emma:interpretation id="int2" emma:confidence=".6"> <person>67890</person> <name>Jim Jones</name> </emma:interpretation> </emma:one-of> </emma:emma> </mmi:data> </mmi:doneNotification></mmi:mmi> example EMMA output case faceimage match employees. <mmi xmlns="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:doneNotification source="uri:faceURI" context="URI-1" status="success" requestID="request-1" > <mmi:data> <emma:emma version="1.0" xmlns:emma="http://www.w3.org/2003/04/emma"> <emma:interpretation id="int1" emma:confidence="0.0" uninterpreted="true" emma:medium="visual" emma:mode="photograph" emma:function="identification"/> </emma:emma> </mmi:data> </mmi:doneNotification></mmi:mmi> Example simple modality: Form-filling using HandwritingRecognition Possible Handwriting Recognition Component Consider ink recognition modality component HandwritingRecognition digital ink written using anelectronic pen stylus, recognition returns therecognized text. API such modality component includeevents initializing component, requesting recognitionby providing digital ink data, receiving recognized textresult n-best list) back component shownin figure. Figure Example Japanese handwriting recognition example handwriting ink captured,represented W3C InkML format sent IM requesting forrecognition text. following sequences events explain recognition request. IM requests ink recognition modality sending event parameters configuringthe HWR system. Ink recognition modality status configuration HWR system. IM event ink recognitionmodality event's data field InkML data berecognized. Once recognition completed, ink recognition modalitynotifies results IM using eventalong recognition choices list). use case form-filling application acceptshandwriting input provided user form fields. Theinputs are recognized displayed back text thecorresponding fields. ink capture modality be used tocapture ink send IM recognition. Thecommunication ink capture modality IM notcovered here sake brevity. section explainsthe details communication MMI Runtime Framework(RTF) IM ink recognition modality. Table Component behavior Ink modality respectto modality component guidelines. Guideline Component Information Guideline modality component implement life cycle events. See Table details implementation thelife-cycle events. Guideline Identify other functions modality componentthat are relevant interaction manager. functions component are covered thelife-cycle events, other functions are needed. Guideline component uses media, specify mediaformat. component uses W3C InkML format represent handwritingdata ink). Guideline Specify protocols supported component fortransmitting media SIP). component uses HTTP transmitting media. Other standardprotocols such TCP also be explored. Guideline Specify supported human languages. Virtually human language script be supported based onthe HWR component capability. Guideline Specify supporting languages required thecomponent. W3C InkML representing handwriting data. Guideline Modality components sending data theinteraction manager use EMMA format. component uses EMMA. Table Component behavior handwriting recognition foreach life-cycle event. Life Cycle Event Component Implementation newContextRequest component requests new context theIM. newContextResponse component starts new context context id prepareRequest component resources be used recognition.Based parameter, first appropriaterecognizer. also configures recognizer other parameterssuch recognition confidence threshold, limit size ofn-best results be returned etc., available. prepareResponse recognizer failed find matchingrecognizer request language script, relevant errormessage returned <statusInfo> element. startRequest component recognition handwritinginput. startResponse status recognition returned <statusInfo> element. doneNotification Identification results EMMA format are reported field. mode medium thefunction verbal cancelRequest component stops processing always hard stop irrespective request. cancelResponse pauseRequest component pause. pauseResponse <statusInfo> field pause". resumeRequest component resume. resumeResponse <statusInfo> field resume". extensionNotification component not use ignoresany events are sent theIM. clearContextRequest clearContextResponse statusRequest statusResponse component returns standard life cycle response. attribute component doesnot supply automatic updates. Note: means component not doanything actions specified MMIArchitecture. Event Syntax Examples events preparing component IM send prepareRequest event ink recognition component.The ink recognition component appropriate recognizerthat matches given language script, example setto grammar file containsconstraints aid recognizer. confidence threshold ofthe component set .7 IM requests maximum fivepossible matches. Based capability recognizer, otherpossible parameters such profile' containsuser-specific information be provided. <mmi:mmi version="1.0" xmlns:mmi="http://www.w3.org/2008/04/mmi-arch"> <mmi:prepareRequest source="uri:RTFURI" context="URI-1" requestID="request-1"> <mmi:data> <ink-recognition-parameters grammar="RecoGrammar.xml" threshold=".7" script="English_Lowercase" max-nbest="5"/> </mmi:data> </mmi:prepareRequest></mmi:mmi> part support life cycle events, modalitycomponent required respond prepareRequest event aprepareResponse event. Here's example prepareResponse fromthe ink recognition component IM informing IM recognition component successfully initialized. <mmi:mmi xmlns:mmi="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:prepareResponse source="uri:inkRecognizerURI" context="URI-1" requestID="request-1" status="success"/></mmi:mmi> Here's example prepareResponse event inkrecognition component IM case failure, anexample failure message. case failure message indicatesthat language script not supported. <mmi:mmi xmlns:mmi="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:prepareResponse source="uri:inkRecognizerURI" context="URI-1" requestID="request-1" status="failure"> <mmi:statusInfo> Given language script not supported </mmi:statusInfo> </mmi:prepareResponse></mmi:mmi> Examples events starting component start component recognize handwriting data, event IM ink recognition component issent. data field event InkML representation ofthe ink data. ink, additional information such referenceco-ordinate system capture device's resolution also beprovided InkML data. example shows inkstrokes have X Y channels ink been captured aresolution DPI. example ink data strokes ofthe Japanese character means <mmi:mmi xmlns:mmi="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:startRequest source="uri:inkRecognizerURI" context="URI-1" requestID="request-1"> <mmi:data> <ink:ink version="1.0" xmlns:ink="http://www.w3.org/2003/InkML"> <ink:definitions> <ink:context id="device1Context"> <ink:traceFormat id="strokeFormat> <ink:channel name="X" type="decimal"> <ink:channelProperty name="resolution" value="1000" units="1/in"/> </ink:channel> <ink:channel name="Y" type="decimal"> <ink:channelProperty name="resolution" value="1000" units="1/in"/> </ink:channel> </ink:traceFormat> </ink:context> </ink:definitions> <ink:traceGroup contextRef="#device1Context"> <ink:trace> </ink:trace> <ink:trace> </ink:trace> <ink:trace> </ink:trace> <ink:trace> </ink:trace> </ink:traceGroup> </ink:ink> </mmi:data> </mmi:startRequest></mmi:mmi> part support life cycle events, modalitycomponent required respond startRequest event astartResponse event. Here's example startResponse recognition component IM informing IM inkrecognition component successfully started. <mmi:mmi xmlns:mmi="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:startResponse source="uri:inkRecognizerURI" context="URI-1" requestID="request-1" status="success"/></mmi:mmi> Here's example startResponse event inkrecognition component IM case failure, anexample failure message. case failure message indicatesthat recognition failed due invalid data format thehandwriting data. <mmi:mmi xmlns:mmi="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:startResponse source="uri:inkRecognizerURI" context="URI-1" requestID="request-1" status="failure"> <mmi:statusInfo> Invalid data format </mmi:statusInfo> </mmi:startResponse></mmi:mmi> Exampleoutput event Here's example output event, sent inkrecognition component IM, using EMMA represent theidentification results. results different confidences arereturned. <mmi:mmi xmlns:mmi="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:doneNotification source="uri:inkRecognizerURI" context="URI-1" status="success" requestID="request-1"> <mmi:data> <emma:emma version="1.0" xmlns:emma="http://www.w3.org/2003/04/emma"> <emma:one-of emma:medium="tactile" emma:verbal="true" emma:mode="ink" emma:function="transcription"> <emma:interpretation id="int1" emma:confidence=".8"> <text> 手 </text> </emma:interpretation> <emma:interpretation id="int2" emma:confidence=".7"> <text> 于 </text> </emma:interpretation> </emma:one-of> </emma:emma> </mmi:data> </mmi:doneNotification></mmi:mmi> example EMMA output case therecognizer unable find suitable match inputhandwriting. EMMA output empty interpretationresult. <mmi:mmi xmlns:mmi="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:doneNotification source="uri:inkRecognizerURI" context="URI-1" status="success" requestID="request-1" > <mmi:data> <emma:emma version="1.0" xmlns:emma="http://www.w3.org/2003/04/emma"> <emma:interpretation id="int1" emma:confidence="0.0" emma:medium="tactile" emma:verbal="true" emma:mode="ink" emma:function="transcription" emma:uninterpreted="true"/> </emma:emma> </mmi:data> </mmi:doneNotification></mmi:mmi> Example simplemodality: Video Display Possible Video Display Component Consider theoretical video display modality component thatreceives video file displays screen. API thatmodality component include events starting component,providing video file receiving player statusinformation back component. example theinformation needed run component shows display codec problem. order focus output modality component, example assumesthat video file given source; however, anotherpossibility be also include video acquisition acomposite more complex real-time displaycomponent. Depending capabilities modality component,other possible information be included be thevideo formats supported. MMI Runtime Framework use thefollowing events communicate such component. Table Component behavior Video Display respectto modality component guidelines. Guideline Component Information Guideline modality component implement life cycle events. See Table details implementation thelife-cycle events. Guideline Identify other functions modality componentthat are relevant interaction manager. functions component are covered thelife-cycle events, other functions are needed. Guideline component uses media, specify mediaformat. component uses moment only h.264 codecformat. Guideline Specify protocols supported component fortransmitting media SIP). component uses HTTP transmitting media. Guideline Specify supported human languages. component not support human languages. Guideline Specify supporting languages required thecomponent. component not require markup languages. Guideline Modality components sending data theinteraction manager use EMMA format. component uses EMMA. Table Component behavior Video Display eachlife-cycle event. Life Cycle Event Component Implementation newContextRequest component requests new context theIM. newContextResponse component starts new context context id prepareRequest component resources be used displayconfiguration, specifically, supported formats table. prepareResponse recognizer failed find matchingrecognizer request language script, relevant errormessage returned <statusInfo> element. startRequest component starts displaying video possible. element hold element containing attribute URI referencingthe video content. startResponse current video format not found thesupported codec formats table, error message notsupported" returned <statusInfo> element. doneNotification Display state EMMA format are reported field.The mode medium function verbal cancelRequest component stops processing always hard stop irrespective request. cancelResponse pauseRequest pauseResponse resumeRequest resumeResponse extensionNotification component not use ignoresany events are sent theIM. clearContextRequest clearContextResponse statusRequest statusResponse component returns standard life cycle response. attribute component doesnot supply automatic updates. Note: means component not doanything actions specified MMIArchitecture. Event Syntax events starting component start component, startRequest event IM thedisplay component sent, asking start video display. Itgives information video file certain URI. <mmi xmlns="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:startRequest source="uri:RTFURI" context="URI-1" requestID="request-1"> <mmi:data> <video-display-parameters videoFile="someURI"/> </mmi:data> </mmi:startRequest></mmi:mmi> part support life-cycle events, modalitycomponent required respond startRequest event astartResponse event. Here's example startResponse thedisplay component IM informing IM component issuccessfully started video displaying. <mmi xmlns="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:startResponse source="uri:displayURI" context="URI-1" requestID="request-1" status="success"/> </mmi:mmi> Here's example startResponse event displaycomponent IM case failure, example failuremessage. case failure message videocodec not supported. <mmi xmlns="http://www.w3.org/2008/04/mmi-arch" version="1.0"> <mmi:startResponse source="uri:displayURI" context="URI-1" requestID="request-1" status="failure"> <mmi:statusInfo> WVM codec not supported </mmi:statusInfo> </mmi:startResponse></mmi:mmi> References MMI-ARCH Interfaces Draft)" JimBarnett et al. editors. specification looselycoupled architecture multimodal user interfaces, allowsfor co-resident distributed implementations, markup scripting, use well definedinterfaces constituents. World Wide Web Consortium,2011. MMIF Interaction Framework" James A. Larson,T.V. Raman Dave Raggett, editors, World Wide Web Consortium,2003. EMMA Annotation markup language MichaelJohnson et al. editors. EMMA XML format annotatingapplication specific interpretations user input informationsuch confidence scores, time stamps, input modality andalternative recognition hypotheses, World Wide Web Consortium,2009. VoiceXML Markup Language Version Oshry et al. editors. World Wide Web Consortium, SSML Markup Language Version DanielC. Burnett et al. editors. World Wide Web Consortium, SRGS Grammar Specification Version AndrewHunt et al. editors. World Wide Web Consortium, SISR Speech Recognition Version1.0" Luc Van Tichelen al. editors. World Wide WebConsortium, 